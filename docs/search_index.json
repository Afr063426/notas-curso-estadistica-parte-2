[
["index.html", "Notas de Clase CA-403 Capítulo 1 Introducción", " Notas de Clase CA-403 Maikol Solís Capítulo 1 Introducción "],
["estimación-de-densidades.html", "Capítulo 2 Estimación de densidades 2.1 Histograma 2.2 Estimación No-paramétrica de densidad 2.3 Propiedades Estadísticas 2.4 Escogiendo el ancho de banda 2.5 Laboratorio", " Capítulo 2 Estimación de densidades 2.1 Histograma El histograma es una de las estructuras básicas en estadística. Básicamente con este objeto se puede visualizar la distribución de los datos sin tener conocimiento previo de los mismos. 2.1.1 Construcción Estadística Suponga que \\(X_1,X_2, \\dots ,X_n\\) proviene de una distribución desconocida. Seleccione un origen \\(x_0\\) y divida la linea real en segmentos. \\[\\begin{equation*} B_j = [x_0 +(j - 1)h,x_0 + jh) \\quad j\\in \\mathbb{Z} \\end{equation*}\\] Cuente cuántas observaciones caen en cada segmento. \\(n_j\\). - Cuente la frecuencia por el tamaño de muestra \\(n\\) y el ancho de banda \\(h\\). \\[\\begin{equation*} f_j = \\frac{n_j}{nh} \\end{equation*}\\] Dibuje el histograma. Formalmente el histograma es el \\[\\begin{equation*} \\hat{f}_h(x) = \\frac{1}{nh} \\sum_{i = 1}^{n} \\sum_{j} I(X_i\\in B_j) I(x\\in B_j), \\end{equation*}\\] donde \\(I\\) es la indicadora. 2.1.2 Construcción probabilistica Denote \\(m_j=jh-h/2\\) el centro del segmento, \\[\\begin{align*} \\mathbb{P}\\left(X\\in \\left[m_j - \\frac{h}{2},m_j + \\frac{h}{2} \\right)\\right) &amp; = \\int_{m_j - \\frac{h}{2}}^{m_j + \\frac{h}{2}} f(u)du \\\\ &amp; \\approx f(m_j)h \\end{align*}\\] Esto se puede aproximar como \\[\\begin{equation*} \\mathbb{P} \\left(X\\in \\left[m_j - \\frac{h}{2},m_j + \\frac{h}{2}\\right) \\right) \\approx \\frac{1}{n} \\# \\left\\{X\\in \\left[m_j - \\frac{h}{2},m_j + \\frac{h}{2}\\right) \\right\\} \\end{equation*}\\] Acomodando un poco la expresión \\[\\begin{equation*} \\hat{f}_h(m_j) = \\frac{1}{nh} \\# \\left\\{X\\in \\left[m_j - \\frac{h}{2},m_j + \\frac{h}{2}\\right) \\right\\} \\end{equation*}\\] 2.1.3 Propiedades estadísticas Suponga que \\(x_0 = 0\\) y que \\(x \\in B_j\\) fijo, entonces \\[\\begin{equation*} \\hat{f}_h(m_j) = \\frac{1}{nh} \\sum_{i = 1}^{n} I(X_i \\in B_j) \\end{equation*}\\] 2.1.4 Sesgo El cálculo del sesgo es el \\[\\begin{align*} \\mathbb{E}\\left[ \\hat{f}_h(m_j)\\right] &amp; = \\frac{1}{nh} \\sum_{i = 1}^{n} \\mathbb{E}\\left[ I(X_i \\in B_j)\\right] \\\\ &amp; = \\frac{1}{nh} n \\mathbb{E}\\left[ I(X_i \\in B_j)\\right] \\end{align*}\\] \\(I(X_i \\in B_j)\\) es una indicadora con probabilidad de 1 de \\(\\int_{(j - 1)h}^{jh} f(u)du\\) y 0 sino. Entonces \\[\\begin{align*} \\mathbb{E}\\left[ I(X_i \\in B_j)\\right] = \\mathbb{P}\\left(I(X_i \\in B_j)=1\\right) = \\int_{(j - 1)h}^{jh} f(u)du. \\end{align*}\\] Entonces, \\[\\begin{align*} \\mathbb{E}\\left[{f}_h(m_j)\\right] &amp; = \\frac{1}{h} \\int_{(j - 1)h}^{jh} f(u)du \\end{align*}\\] \\[\\begin{equation*} Sesgo(\\hat{f}_h(m_j)) = \\frac{1}{h} \\int_{(j - 1)h}^{jh} f(u)du - f(x) \\end{equation*}\\] Esto se puede aproximar usando Taylor alrededor del centro \\(m_j = jh - h/2\\) de \\(B_j\\) de modo que \\(f(u) - f(x) \\approx f^{\\prime}(m_j)(u - x)\\). \\[\\begin{equation*} Sesgo(\\hat{f}_h(m_j)) = \\frac{1}{h} \\int_{(j - 1)h}^{jh} f(u) - f(x) du \\approx f^\\prime(m_j)(m_j - x) \\end{equation*}\\] 2.1.5 Varianza Dado que todos los \\(X_i\\) son i.i.d., entonces \\[\\begin{align*} \\mathrm{Var}\\left( \\hat{f}_h(m_j)\\right) &amp; = \\mathrm{Var}\\left( \\frac{1}{nh} \\sum_{i = 1}^{n} I(X_i \\in B_j)\\right) \\\\ &amp; = \\frac{1}{n^2h^2} n\\mathrm{Var}\\left( I(X_i \\in B_j)\\right) \\end{align*}\\] La variable \\(I\\) es una bernoulli con parametro \\(\\int_{(j - 1)h}^{h} f(u)du\\) por lo tanto su varianza es el \\[\\begin{equation*} \\mathrm{Var}\\left( \\hat{f}_h(x)\\right)\\, = \\frac{1}{nh^2} \\left(\\int_{(j - 1)h}^{h} f(u)du \\right)\\left( 1 -\\int_{(j - 1)h}^{h} f(u)du \\right) \\end{equation*}\\] Ejercicio 2.1 Usando un desarrollo de Taylor como en la parte anterior, pruebe que: \\[\\begin{equation*} \\mathrm{Var}\\left( \\hat{f}_h(x)\\right)\\approx \\frac{1}{nh} f(x) \\end{equation*}\\] 2.1.6 Error cuadrático medio El error cuadrático medio del histograma es el \\[\\begin{equation*} \\mathrm{MSE}\\left( \\hat{f}_h(x)\\right) = \\mathrm{E}\\left[\\left(\\hat{f}_h(x) - f(x)\\right)^2\\right] = \\mathrm{Sesgo}^2\\left( \\hat{f}_h(x)\\right) + \\mathrm{Var}\\left( \\hat{f}_h(x)\\right). \\end{equation*}\\] Ejercicio 2.2 ¿Pueden probar la segunda igualdad de la expresión anterior? Solución. Prueba segunda igualdad: \\[\\begin{align*} &amp; \\text{Sesgo}^2\\left(\\hat{f}_h(x) \\right) + \\text{Var}\\left( \\hat{f}_h(x)\\right) = \\\\ &amp; \\left[ E\\left(\\hat{f}_h(x)\\right) - f(x)\\right]^2 + E\\left[\\left( E\\left(\\hat{f}_h(x)\\right) - \\hat{f}_h(x)\\right)^2\\right] \\ = \\\\ &amp; E\\left[\\left[ E\\left(\\hat{f}_h(x)\\right) - f(x)\\right]^2 + \\left( E\\left(\\hat{f}_h(x)\\right) - \\hat{f}_h(x)\\right)^2 \\right] \\ \\textcolor{red}{(*)} \\ \\end{align*}\\] Ahora note que: \\[\\begin{align*} &amp; E\\left[\\left( E\\left(\\hat{f}_h(x)\\right) - f(x) \\right) \\left(E\\left(\\hat{f}_h(x)\\right) - \\hat{f}_h(x) \\right) \\right] \\ = \\ \\\\ &amp; E\\left[E\\left(\\hat{f}_h(x)\\right)^2 \\right] \\ - \\ E\\left[E\\left(\\hat{f}_h(x)\\right)\\cdot \\hat{f}_h(x) \\right] \\ - \\ E\\left[f(x)\\cdot E\\left(\\hat{f}_h(x)\\right)\\right] \\ + \\\\ &amp; E\\left[f(x)\\cdot \\hat{f}_h(x)\\right]\\ = \\ \\\\ &amp; E\\left(\\hat{f}_h(x)\\right)^2 \\ - \\ E\\left(\\hat{f}_h(x)\\right)^2 \\ - \\ E\\left(\\hat{f}_h(x)\\right)\\cdot E\\left( f(x)\\right) \\ + \\ E\\left( f(x)\\right)\\cdot E\\left(\\hat{f}_h(x)\\right) \\ \\\\ &amp; = 0 \\end{align*}\\] Entonces: \\[\\begin{align*} &amp; \\textcolor{red}{(*)} \\ = \\ E\\left[\\left[ E\\left(\\hat{f}_h(x)\\right) - f(x)\\right]^2 \\ - \\right. \\\\ &amp; \\left. \\ 2\\left( E\\left(\\hat{f}_h(x)\\right) - f(x) \\right) \\left(E\\left(\\hat{f}_h(x)\\right) - \\hat{f}_h(x) \\right) \\ + \\ \\left( E\\left(\\hat{f}_h(x)\\right) - \\hat{f}_h(x)\\right)^2 \\right] \\ = \\ \\\\ &amp; E\\left[ \\left(E\\left(\\hat{f}_h(x)\\right) - f(x) \\ - \\ E\\left(\\hat{f}_h(x)\\right) + \\hat{f}_h(x) \\right)^2 \\right] \\ = \\ \\\\ &amp; E\\left[\\left(\\hat{f}_h(x) - f(x)\\right)^2 \\right] \\end{align*}\\] Retomando los términos anteriores se tiene que \\[\\begin{multline*} \\mathrm{MSE}\\left( \\hat{f}_h(x)\\right) = \\frac{1}{nh} f(x) + f^\\prime \\left\\{ \\left( j - \\frac{1}{2} \\right) h \\right\\}^2 \\left\\{ \\left( j - \\frac{1}{2} \\right) h - x \\right\\}^2 \\\\ + o\\left(h \\right) + o\\left(\\frac{1}{nh} \\right) \\end{multline*}\\] Nota: Si \\(h \\to 0\\) y \\(nh \\to \\infty\\) entonces \\(\\mathrm{MSE}\\left( \\hat{f}_h(x)\\right) \\to 0\\). Es decir, conforme usamos más observaciones, pero el ancho de banda de banda no decrece tan rápida, entonces el error cuadrático medio converge a 0. Esto indica que si \\(\\mathrm{MSE}\\left( \\hat{f}_h(x)\\right) \\to 0\\) (convergencia en \\(\\mathbb{L}^2\\)) implica que \\(\\hat{f}_h(x) \\stackrel{\\mathcal{P}}{\\to} f(x)\\), por lo tanto \\(\\hat{f}_h\\) es consistente. La fórmula anterior tiene la siguiente particularidad Si \\(h\\to 0\\), la varianza crece (converge a \\(\\infty\\)) y el sesgo decrece (converge a \\(f^\\prime (0)x^2\\)). Si \\(h\\to \\infty\\), la varianza decrece (hacia 0) y el sesgo crece (hacia \\(\\infty\\)) Note que la figura siguiente tiene esa propiedad. 2.1.7 Error cuadrático medio integrado El problema con el \\(\\mathrm{MSE}\\left( \\hat{f}_h(x)\\right)\\) es que depende completamente del punto escogido \\(x\\). La solución a esto es integrar el MSE. \\[\\begin{align*} \\mathrm{MISE}\\left( \\hat{f}_h(x)\\right) &amp; = \\mathrm{E}\\left[ \\int_{ -\\infty}^{\\infty} \\left\\{ \\hat{f}_h(x) - f(x) \\right\\}^2 dx \\right] \\\\ &amp; = \\int_{ -\\infty}^{\\infty} \\mathrm{E}\\left[ \\left\\{ \\hat{f}_h(x) - f(x) \\right\\}^2 \\right] dx \\\\ &amp; = \\int_{ -\\infty}^{\\infty}\\mathrm{MSE}(\\hat{f}_h(x)) \\, dx \\end{align*}\\] Además, \\[\\begin{align*} \\mathrm{MISE} (\\hat{f}_h(x)) &amp; = \\int_{ -\\infty}^{\\infty} \\frac{1}{nh} f(x)dx \\\\ &amp; + \\int_{ -\\infty}^{\\infty}\\, \\sum_{j}^{} I(x\\in B_j) \\left\\{ \\left( j- \\frac{1}{2} \\right)h -x \\right\\}^2 \\left [f^\\prime \\left( \\left\\{j - \\frac{1}{2}\\right\\}h \\right) \\right]^2 dx \\\\ &amp; = \\frac{1}{nh} + \\sum_{j}^{} \\left [f^\\prime \\left( \\left\\{j - \\frac{1}{2}\\right\\}h \\right) \\right]^2 \\int_{ B_j} \\left\\{ \\left( j- \\frac{1}{2} \\right)h -x \\right\\}^2 dx \\\\ &amp; =\\frac{1}{nh} + \\frac{h^2}{12} \\sum_{j} \\left [f^\\prime \\left( \\left\\{j - \\frac{1}{2}\\right\\}h \\right) \\right]^2 \\\\ &amp; \\approx \\frac{1}{nh} + \\frac{h^2}{12} \\int \\{f^\\prime(x)\\}^2 dx \\\\ &amp; =\\frac{1}{nh} + \\frac{h^2}{12} \\Vert f^\\prime\\Vert_{2}^2 \\end{align*}\\] 2.1.8 Ancho de banda óptimo para el histograma El MISE tiene el mismo comportamiento que el MSE. La figura siguiente presenta el comportamiento de la varianza, sesgo y MISE para nuestro ejemplo. La mala elección del parámetro \\(h\\) causa que el histograma no capture toda la estructura de los datos. En este caso se puede simplemente minimizar el MISE de la forma usual, \\[\\begin{equation*} \\frac{\\partial \\mathrm{MISE}(f_{h})}{\\partial h} = -\\frac{1}{nh^2} + \\frac{1}{6} h \\Vert f^\\prime\\Vert_{2}^2 = 0 \\end{equation*}\\] implica que \\[\\begin{equation*} h_{opt} = \\left(\\frac{6}{n\\Vert f^\\prime\\Vert_{2}^2}\\right) ^{1/3} = O\\left( n^{1/3} \\right). \\end{equation*}\\] y que por lo tanto \\[\\begin{equation*} \\mathrm{MISE}(\\hat{f}_{h}) = \\frac{1}{n} \\left(\\frac{n\\Vert f^\\prime\\Vert_{2}^2}{6}\\right) ^{1/3} \\end{equation*}\\] Nota (Recuerde de Estadística I): Si \\(X_1, \\ldots, X_2 \\sim f_{\\theta}\\) i.i.d, con \\(\\mathrm{Var}(X) = \\sigma^2\\), recuerde que el estimador \\(\\hat{\\theta}\\) de \\(\\theta\\) tiene la característica que \\[\\begin{equation*} \\mathrm{MSE}(\\theta) = \\mathrm{Var}(\\hat{\\theta}) + \\mathrm{Sesgo}^2(\\hat{\\theta}) = \\frac{\\sigma^2}{n} \\end{equation*}\\] Según la nota anterior la tasas de convergencia del histograma es más lenta que la de un estimador parámetrico considerando la misma cantidad de datos. Finalmente, podemos encontrar el valor óptimo de esta datos dado por \\(h=\\)h_opt_MISE 2.2 Estimación No-paramétrica de densidad 2.2.1 Primera construcción Sea \\(X_{1},\\ldots,X_{n}\\) variables aleatorias i.i.d. con distribución \\(f\\) en \\(\\mathbb{R}\\). La distribución de \\(f\\) es \\(F(x)=\\int_{-\\infty}^{x}f(t)dt\\). Considere la distribución empírica como \\[ F_{n}(x)=\\frac{1}{n}\\sum_{i=1}^{n}I(X_{i}\\leq x). \\] Por la ley de los grandes números tenemos que \\(\\hat{F}_{n}(x) \\xrightarrow{c.s} F(x)\\) para todo \\(x\\) en \\(\\mathbb{R}\\)as \\(n\\rightarrow\\infty\\). Entonces, \\(F_{n}(x)\\) es consistente para todo \\(x\\) in \\(\\mathbb{R}\\). Nota: ¿Podríamos derivar \\(\\hat{F}_n\\) para encontrar el estimar \\(\\hat{f}_n\\)? La respuesta es si (más o menos). Suponga que \\(h&gt;0\\) tenemos la aproximación \\[ f(x)\\approx\\frac{F(x+h)-F(x-h)}{2h}. \\] Remplazando \\(F\\) por su estimador \\(\\hat{F}_{n}\\), defina \\[ \\hat{f}_{n}^{R}(x)=\\frac{F_{n}(x+h)-F_{n}(x-h)}{2h}, \\] donde \\(\\hat{f}_{n}^{R}(x)\\) es el estimador de Rosenblatt . Podemos rescribirlo de la forma, \\[ \\hat{f}_{n}^{R}(x)=\\frac{1}{2nh}\\sum_{i=1}^{n}I(x-h&lt;X_{i}\\leq x+h)=\\frac{1}{nh}\\sum_{i=1}^{n}K_{0}\\left(\\frac{X_{i}-x}{h}\\right) \\] con \\(K_{0}(u)=\\frac{1}{2}I(-1&lt;u\\leq1)\\), lo cuál es equivalente al caso del histograma. 2.2.2 Otra construcción Con el histograma construimos una serie de segmentos fijo \\(B_{j}\\) y contabamos el número de datos que estaban CONTENIDOS en \\(B_{j}\\) Nota: ¿Qué pasaría si cambiamos la palabra CONTENIDOS por ALREDEDOR DE “x”? Suponga que se tienen intervalos de longitud $ 2h $, es decir, intervalos de la forma $ [x-h,x+h) $. El histograma se escribe como \\[\\begin{equation*} \\hat{f_{h}}(x) = \\dfrac{1}{2hn} \\# \\{ X_i \\in [x-h,x+h) \\}. \\end{equation*}\\] Ahora tratemos de modificar ligeramente esta expresión notando dos cosas \\[\\begin{equation*} \\frac{1}{2} I \\left( \\left\\vert u \\right\\vert \\leq 1 \\right) \\end{equation*}\\] con \\(u = \\frac{x-xi}{h}\\) \\[\\begin{equation*} \\frac{1}{2}\\# \\{ X_i \\in [x-h,x+h) \\} =\\sum_{i=1}^{n} K\\left( \\frac{x-x_{i}}{h} \\right) =\\sum_{i=1}^{n} \\frac{1}{2} I \\left( \\left\\vert \\frac{x-x_{i}}{h} \\right\\vert \\leq 1 \\right) \\end{equation*}\\] \\end{enumerate} Finalmente se tiene que \\[\\begin{equation*} \\hat{f}_{h}\\left( x \\right) = \\frac{1}{nh}\\sum_{i=1}^{n} K\\left( \\frac{x-x_{i}}{h} \\right) \\end{equation*}\\] Nota: ¿Qué pasaría si cambiaríamos la función \\(K\\) del histograma por una más general? Esta función debería cumplir las siguientes características \\(K(u)\\geq 0\\). \\(\\int_{-\\infty}^{\\infty} K(u)du = 1\\). \\(\\int_{-\\infty}^{\\infty} u K(u)du = 0\\). \\(\\int_{-\\infty}^{\\infty} u^{2} K(u)du &lt;\\infty\\). Por ejemplo: Uniforme: \\(\\frac{1}{2} I \\left( \\left\\vert u \\right\\vert \\leq 1 \\right)\\). Triangular: \\((1-|u|) I \\left( \\left\\vert u \\right\\vert \\leq 1 \\right)\\). Epanechnikov: \\(\\frac{3}{4} (1-u^{2}) I \\left( \\left\\vert u \\right\\vert \\leq 1 \\right)\\). Gausian: \\(\\frac{1}{\\sqrt{2\\pi}} \\exp \\left( -\\frac{1}{2}u^{2} \\right)\\). Entonces se tendría que la expresión general para un estimador por núcleos es \\[\\begin{equation*} \\hat{f}_{h}\\left( x \\right) = \\frac{1}{nh}\\sum_{i=1}^{n} K\\left( \\frac{x-x_{i}}{h} \\right) \\end{equation*}\\] Nota: ¿Qué pasaría si modificamos el ancho de banda \\(h\\) para un mismo kernel? Nuevamente sería el ancho de banda ya que Nota: ¿Qué pasaría si modificamos el kernel para un mismo ancho de banda \\(h\\)? Recordemos nuevamente la fórmula \\[\\begin{equation*} \\hat{f}_{h}\\left( x \\right) = \\frac{1}{nh}\\sum_{i=1}^{n} K\\left( \\frac{x-X_{i}}{h} \\right) \\end{equation*}\\] Cada sumando de esta expresión es una función por si misma. Si la integramos se obtiene que \\[\\begin{equation*} \\frac{1}{nh}\\int K\\left( \\frac{x-X_{i}}{h} \\right) dx = \\frac{1}{nh} \\int K\\left( u \\right) h du = \\frac{1}{n} \\int K(u) du = \\frac{1}{n} \\end{equation*}\\] 2.3 Propiedades Estadísticas Nota: ¿Podríamos imitar lo mismo que hicimos para el histograma? Si. Las propiedades que vimos anteriormente son universales para estimadores. Entonces: \\[\\begin{align*} \\mathrm{MSE}(\\hat{f}_{h}(x)) &amp; =\\mathrm{Var}(\\hat{f}_{h}(x))+\\mathrm{Sesgo}^{2} (\\hat{f}_{h}(x)) \\\\ \\mathrm{MISE}(\\hat{f}_{h}) &amp; =\\int\\mathrm{Var}(\\hat{f}_{h}(x))dx+\\int\\mathrm{Sesgo}^{2}(\\hat{f}_{h}(x))dx \\end{align*}\\] donde \\(\\mathrm{Var}\\left(\\hat{f}_{h}(x)\\right)=\\mathbb{E}\\left[\\hat{f}_{h}(x)-\\mathbb{E}\\hat{f}_{h}(x)\\right]^{2}\\) and \\(\\mathrm{Sesgo}\\left(\\hat{f}_{h}(x)\\right)=\\mathbb{E}\\left[\\hat{f}_{h}(x)\\right]-f(x)\\). 2.3.1 Varianza \\[\\begin{align*} \\mathrm{Var}(\\hat{f}_{h}(x)) &amp; =\\mathrm{Var}\\left(\\frac{1}{n}\\sum_{i=1}^{n}K\\left(\\frac{x-X_{i}}{h}\\right)\\right) \\\\ &amp; =\\frac{1}{n^{2}h^{2}}\\sum_{i=1}^{n}\\mathrm{Var}\\left(K\\left(\\frac{x-X_{i}}{h}\\right)\\right) \\\\ &amp; =\\frac{1}{nh^{2}}\\mathrm{Var}\\left(K\\left(\\frac{x-X}{h}\\right)\\right) \\\\ &amp; =\\frac{1}{nh^{2}}\\left\\{ \\textcolor{red}{\\mathbb{E}\\left[K^{2}\\left(\\frac{x-X}{h}\\right)\\right]} -\\left\\{ \\textcolor{blue}{\\mathbb{E}\\left[K\\left(\\frac{x-X}{h}\\right)\\right]} \\right\\}^{2} \\right\\}. \\end{align*}\\] Usando que: \\[\\begin{align*} \\textcolor{red}{\\mathbb{E}\\left[K^{2}\\left(\\frac{x-X}{h}\\right)\\right]} &amp; =\\int K^{2}\\left(\\frac{x-s}{h}\\right)f(s)ds \\\\ &amp; =h\\int K^{2}\\left(u\\right)f(uh+x)du \\\\ &amp; =h\\int K^{2}\\left(u\\right)\\left\\{ f(x)+o(1)\\right\\} du \\\\ &amp; =h\\left\\{ \\Vert K\\Vert_{2}^{2}f(x)+o(1)\\right\\} . \\end{align*}\\] \\[\\begin{align*} \\textcolor{blue}{\\mathbb{E}\\left[K\\left(\\frac{x-X}{h}\\right)\\right]} &amp; =\\int K\\left(\\frac{x-s}{h}\\right)f(s)ds \\\\ &amp; = h\\int K\\left(u\\right)f(uh+x)du \\\\ &amp; =h\\int K\\left(u\\right)\\left\\{ f(x)+o(1)\\right\\} du \\\\ &amp; =h\\left\\{f(x)+o(1)\\right\\} . \\end{align*}\\] Por lo tanto se obtiene que \\[\\begin{equation*} \\mathrm{Var}\\left(\\hat{f}_{h}(x)\\right) = \\frac{1}{nh} \\Vert K\\Vert_{2}^{2}f(x) + o\\left(\\frac{1}{nh}\\right), \\text{ si } nh\\to \\infty. \\end{equation*}\\] 2.3.2 Sesgo Para el sesgo tenemos \\[\\begin{align*} \\mathrm{Sesgo}\\left(\\hat{f}_{h}(x)\\right) &amp; = \\mathbb{E}\\left[\\hat{f}_{h}(x)\\right]-f(x) \\\\ &amp; = \\frac{1}{nh} \\sum_{i=1}^{n} \\mathrm{E}\\left[K\\left( \\frac{x-X_{i}}{h} \\right)\\right] - f(x) \\\\ &amp; = \\frac{1}{h}\\mathrm{E}\\left[K\\left( \\frac{x-X_{1}}{h} \\right)\\right] - f(x) \\\\ &amp; = \\int \\frac{1}{h} K\\left( \\frac{x-u}{h}\\right)f(u)du -f(x) \\\\ \\end{align*}\\] Ejercicio 2.3 Usando el cambio de variable \\(s=\\frac{u-x}{h}\\) y las propiedades del kernel pruebe que \\[\\begin{equation*} \\mathrm{Sesgo}\\left(\\hat{f}_{h}(x)\\right) = \\frac{h^{2}}{2} f^{\\prime\\prime} \\mu_{2}(K) + o(h^{2}), \\text{ si } h\\to 0 \\end{equation*}\\] donde \\(\\mu_{2}=\\int s^{2}K(s)ds\\). Solución. \\[\\begin{align*} \\mathrm{Sesgo}(\\hat{f_{h}}(x)) &amp; = \\int \\frac{1}{h} K\\left( \\frac{x-u}{h} \\right) f(u)du - f(x) \\\\ &amp; = \\frac{1}{h} \\int hK(s)f(sh+x) ds - f(x) \\\\ &amp; = \\int K(s)\\Biggl[ f(x) + f^{\\prime}(x)(sh+x-x) \\\\ &amp; \\qquad + \\frac{f^{\\prime\\prime}(x)}{2}(sh+x-x)^2 + o(h^{2}) \\Biggr] - f(x) \\\\ &amp; = \\int K(s)f(x)ds + \\int hf^{\\prime}(x)sK(s) ds \\\\ &amp; \\qquad + \\int \\frac{h^2}{2} f^{\\prime\\prime}(x)s^2K(s) ds + o(h^2) - f(x) \\\\ &amp; = f(x) + 0 + \\frac{h^2}{2}f^{\\prime\\prime}(x)\\mu_{2}(K) + o(h^2) - f(x) \\\\ &amp; = \\frac{h^2}{2}f^{\\prime\\prime}(x)\\mu_{2}(K) + o(h^2) \\\\ \\end{align*}\\] Nota: Note como los cambios en el ancho de banda modifican la suavidad (sesgo) y el aplanamiento de la curva (varianza). 2.3.3 Error cuadrático medio y Error cuadrático medio integrado El error cuadrático medio se escribe \\[\\begin{align*} \\mathrm{MSE}(\\hat{f}_{h}(x)) &amp; = \\mathrm{Sesgo}\\left(\\hat{f}_{h}(x)\\right)^{2} + \\mathrm{Var}\\left(\\hat{f}_{h}(x)\\right) \\\\ &amp; = \\frac{h^{4}}{4}\\left(\\mu_{2}(K)f^{\\prime\\prime}(x)\\right)^{2}+\\frac{1}{nh}\\Vert K\\Vert_{2}^{2}f(x)+o(h^{4})+o\\left(\\frac{1}{nh}\\right). \\end{align*}\\] Y el error cuadrático medio integrado se escribe como, \\[\\begin{align*} \\mathrm{MISE}\\left(\\hat{f}_{h}\\right) &amp; = \\int \\mathrm{MSE}\\left(\\hat{f}_{h}(x)\\right)dx \\\\ &amp; = \\int \\mathrm{Sesgo}\\left(\\hat{f}_{h}(x)\\right)^{2} + \\mathrm{Var}\\left(\\hat{f}_{h}(x)\\right)dx \\\\ &amp; = \\frac{h^{4}}{4}\\mu_{2}^{2}(K)\\left\\Vert f^{\\prime\\prime}(x)\\right\\Vert_{2}^{2} +\\frac{1}{nh}\\Vert K\\Vert_{2}^{2}+o(h^{4})+o\\left(\\frac{1}{nh}\\right). \\end{align*}\\] 2.3.4 Ancho de banda óptimo Minimizando el \\(\\mathrm{MISE}\\) con respecto a \\(h\\) obtenemos \\[\\begin{equation*} h_{opt}=\\left(\\frac{\\Vert K\\Vert_{2}^{2}}{\\Vert f^{\\prime\\prime}\\Vert_{2}^{2}\\left(\\mu_{2}(K)\\right)^{2}n}\\right)^{1/5}=O\\left( n^{-1/5} \\right). \\end{equation*}\\] Nota: De forma práctica, \\(h_{opt}\\) no es un estimador útil de \\(h\\) porque depende de \\(\\Vert f^{\\prime\\prime}\\Vert_{2}^{2}\\) que es desconocido. Más adelante veremos otra forma de encontrar este estimador. Evaluando \\(h_{opt}\\) en el \\(\\mathrm{MISE}\\) tenemos que \\[\\begin{equation*} \\mathrm{MISE}(\\hat{f}_{h})=\\frac{5}{4}\\left(\\Vert K\\Vert_{2}^{2}\\right)^{4/5}\\left(\\Vert f^{\\prime\\prime}\\Vert_{2}^{2}\\mu_{2}(K)\\right)^{2/5}n^{-4/5} = O\\left( n^{-4/5} \\right). \\end{equation*}\\] Nota: Formalmente, es posible probar que si \\(f\\) es \\(\\beta\\) veces continuamente diferenciable y \\(\\int\\left(f^{(\\beta)}\\right)^{2}&lt;\\infty\\), entonces se tiene que \\[ {\\displaystyle h_{opt}=O\\left(n^{-\\frac{1}{2\\beta+1}}\\right).} \\] Por lo tanto se podría aproximar a una tasa paramétrica de convergencia si \\(\\beta\\) es grande. 2.4 Escogiendo el ancho de banda Nota: La principal característica del ancho de banda \\[\\begin{equation*} h_{opt}=\\left(\\frac{\\Vert K\\Vert_{2}^{2}}{\\Vert f^{\\prime\\prime}\\Vert_{2}^{2}\\left(\\mu_{2}(K)\\right)^{2}n}\\right)^{1/5}=O\\left( n^{-1/5} \\right). \\end{equation*}\\] ES QUE ¡NO FUNCIONA! Veremos dos métodos para determinar un \\(h\\) que funcione: Referencia normal. Validación cruzada. 2.4.1 Referencia normal Nota: Este método es más efectivo si se conoce que la verdadera distribución es bastante suave, unimodal y simétrica. Más adelante veremos otro método para densidades más generales. Asuma que \\(f\\) es normal distribuida y se utiliza un kernel \\(K\\) gausiano. Entonces se tiene que \\[\\begin{align*} \\hat{h}_{rn} &amp; =\\left(\\frac{\\Vert K\\Vert_{2}^{2}}{\\Vert f^{\\prime\\prime}\\Vert_{2}^{2}\\left(\\mu_{2}(K)\\right)^{2}n}\\right)^{1/5}=O\\left( n^{-1/5} \\right) \\\\ &amp; =1.06 \\hat{\\sigma} n^{-1/5}. \\end{align*}\\] donde \\[\\begin{equation*} \\hat{\\sigma} = \\sqrt{\\frac{1}{n-1} \\sum_{i=1}^{n} \\left( x_{i}-\\bar{x}^{2} \\right)} \\end{equation*}\\] Ejercicio 2.4 Pruebe que la ecuación anterior es verdadera. Es decir, calcule \\(\\Vert K\\Vert_{2}^{2}\\), \\(\\Vert f^{\\prime\\prime}\\Vert_{2}^{2}\\) y \\(\\mu_{2}(K)\\) Nota: Un problema con \\(\\hat{h}_{rn}=1.06 \\hat{\\sigma} n^{-1/5}\\) es su sensibilidad a los valores extremos. Ejemplo 2.1 La varianza empírica de 1, 2, 3, 4, 5, es 2.5. La varianza empírica de 1, 2, 3, 4, 5, 99, es 1538. El rango intercuantil IQR se define como \\[\\begin{equation*} \\mathrm{IQR}^{X} = Q^{X}_{3} - Q^{X}_{1} \\end{equation*}\\] donde \\(Q^{X}_{1}\\) y \\(Q^{X}_{3}\\) son el primer y tercer de un conjunto de datos \\(X_{1},\\ldots, X_n\\). Con el supuesto que \\(X\\sim \\mathcal{N}(\\mu,\\sigma^{2})\\) entonces \\(\\displaystyle Z = \\frac{X-\\mu}{\\sigma} \\sim \\mathcal{N}(0,1)\\). Entonces, \\[\\begin{align*} \\mathrm{IQR} &amp; = Q^{X}_{3} - Q^{X}_{1} \\\\ &amp; = \\left( \\mu+\\sigma Q^{Z}_{3} \\right) - \\left( \\mu+\\sigma Q^{Z}_{1} \\right) \\\\ &amp; = \\sigma \\left(Q^{Z}_{3} - Q^{Z}_{1} \\right) \\\\ &amp; \\approx \\sigma \\left( 0.67 - (0.67) \\right) \\\\ &amp; =1.34 \\sigma. \\end{align*}\\] Por lo tanto \\(\\displaystyle \\hat{\\sigma} = \\frac{\\widehat{\\mathrm{IQR}}^{X}}{1.34}\\) Podemos sustituir la varianza empírica de la fórmula inicial y tenemos \\[\\begin{equation*} \\hat{h}_{rn} = 1.06 \\frac{\\widehat{\\mathrm{IQR}}^{X}}{1.34} n^{-\\frac{1}{5}} \\approx 0.79\\ \\widehat{\\mathrm{IQR}}^{X}\\ n^{-\\frac{1}{5}} \\end{equation*}\\] Combinando ambos estimadores, podemos obtener, \\[\\begin{equation*} \\hat{h}_{rn} = 1.06 \\min \\left\\{\\frac{\\widehat{\\mathrm{IQR}}^{X}}{1.34}, \\hat{\\sigma }\\right\\} n^{-\\frac{1}{5}} \\end{equation*}\\] 2.4.2 Validación Cruzada Defina el error cuadrático integrado como \\[\\begin{align*} \\mathrm{ISE}(\\hat{f}_{h}) &amp; =\\int\\left(\\hat{f}_{h}(x)-f(x)\\right)^{2}dx\\nonumber \\\\ &amp; =\\int \\hat{f}_{h}^{2}(x)dx-2\\int \\hat{f}_{h}(x)f(x)dx+\\int f^{2}(x)dx. \\end{align*}\\] Nota: El MISE es el valor esperado del ISE. Nuestro objetivo es minimizar el ISE con respecto a \\(h\\). Primero note que \\(\\int f^{2}(x)dx\\) NO DEPENDE de \\(h\\). Podemos minimizar la expresión \\[\\begin{equation*} \\mathrm{ISE}(\\hat{f}_{h})-\\int f^{2}(x)dx= \\textcolor{red}{\\int\\hat{f}_{h}^{2}(x)dx} -2 \\textcolor{blue}{\\int\\hat{f}_{h}(x)f(x)dx} \\end{equation*}\\] Vamos a resolver esto en dos pasos partes Integral \\(\\textcolor{blue}{\\int\\hat{f}_{h}(x)f(x)dx}\\) El término \\(\\textcolor{blue}{\\int\\hat{f}_{h}(x)f(x)dx}\\) es el valor esperado de \\(\\mathrm{E}\\left[\\hat{f}(X)\\right]\\). Su estimador es \\[\\begin{equation*} \\widehat{\\mathrm{E}\\left[\\hat{f}(X)\\right]} = \\frac{1}{n}\\sum_{i=1}^{n}\\hat{f}_{h}(X_{i}) =\\frac{1}{n^{2}h}\\sum_{i=1}^{n}\\sum_{j=1}^{n} K\\left(\\frac{X_{j}-X_{i}}{h}\\right). \\end{equation*}\\] Nota: El problema con esta expresión es que las observaciones que se usan para estimar la esperanza son las misma que se usan para estimar \\(\\hat{f}_{h}(x)\\) (Se utilizan doble). La solución es remover la \\(i^{\\text{ésima}}\\) observación de \\(\\hat{f}_{h}\\) para cada \\(i\\). Redefiniendo el estimador anterior tenemos \\(\\int \\hat{f}_{h}(x)f(x)dx\\) como \\[ \\frac{1}{n}\\sum_{i=1}^{n}\\hat{f}_{h,-i}(X_{i}), \\] donde \\[ \\hat{f}_{h,-i}(x)=\\frac{1}{(n-1)h}\\sum_{\\substack{j=1\\\\ j\\neq i}}^{n}K\\left( \\frac{x-X_{i}}{h} \\right) . \\] Integral \\(\\textcolor{red}{\\int\\hat{f}_{h}^{2}(x)dx}\\) Siguiendo con el término \\(\\textcolor{red}{\\int\\hat{f}_{h}^{2}(x)dx}\\) note que este se puede reescribir como \\[\\begin{align*} \\textcolor{red}{\\int\\hat{f}_{h}^{2}(x)dx} &amp; =\\int\\left(\\frac{1}{nh}\\sum_{i=1}^{n}K\\left( \\frac{x-X_{i}}{h} \\right)\\right)^{2}dx \\\\ &amp; =\\frac{1}{n^{2}h^{2}}\\sum_{i=1}^{n}\\sum_{i=1}^{n}\\int K\\left(\\frac{x-X_{i}}{h}\\right)K\\left(\\frac{x-X_{j}}{h}\\right)dx \\\\ &amp; =\\frac{1}{n^{2}h}\\sum_{i=1}^{n}\\sum_{i=1}^{n}\\int K\\left(u\\right)K\\left(\\frac{X_{i}-X_{j}}{h}-u\\right)du \\\\ &amp; =\\frac{1}{n^{2}h}\\sum_{i=1}^{n}\\sum_{i=1}^{n}K*K\\left(\\frac{X_{i}-X_{j}}{h}\\right). \\end{align*}\\] donde \\(K*K\\) es la convolución de \\(K\\) consigo misma. Finalmente tenemos la función, \\[ \\mathrm{CV}(h)=\\frac{1}{n^{2}h}\\sum_{i=1}^{n}\\sum_{j=1}^{n}K*K\\left(\\frac{X_{i}-X_{j}}{h}\\right)-\\frac{2}{(n-1)h}\\sum_{i=1}^{n}\\mathop{\\sum_{j=1}^{n}}_{j\\neq i}K\\left( \\frac{X_{i}-X_{j}}{h} \\right). \\] Nota: Note que \\(\\mathrm{CV}(h)\\) no depende de \\(f\\) o sus derivadas. Nota: Para efectos prácticos es mejor utilizar el criterio \\[ CV(h)=\\int\\hat{f}_{h}^{2}(x)dx-\\frac{2}{(n-1)h}\\sum_{i=1}^{n}\\mathop{\\sum_{j=1}^{n}}_{j\\neq i}K\\left( \\frac{X_{i}-X_{j}}{h} \\right) \\] y luego calcular numéricamente la integral. 2.4.3 Intervalos de confianza para estimadores de densidad no paramétricos Usando los resultados anteriores y asumiendo que \\(h=cn^{-\\frac{1}{5}}\\) entonces \\[\\begin{equation*} n^{-\\frac{2}{5}} \\left\\{ \\hat{f}_{h}(x) -f(x)\\right\\} \\xrightarrow{\\mathcal{L}} \\mathcal{N}\\left(\\underbrace{\\frac{c^{2}}{2} f^{\\prime\\prime} \\mu_{2}(K)}_{b_{x}}, \\underbrace{\\frac{1}{c}f(x) \\left\\Vert K \\right\\Vert_{2}^{2}}_{v_{x}}\\right). \\end{equation*}\\] Si \\(z_{1-\\frac{\\alpha}{2}}\\) es el cuantil \\(1-\\frac{\\alpha}{2}\\) de una distribución normal estándar, entonces \\[\\begin{align*} 1-\\alpha &amp; \\approx \\mathbb{P}\\left(b_{x}-z_{1-\\frac{\\alpha}{2}} v_{x} \\leq n^{2 / 5}\\left\\{\\widehat{f}_{h}(x)-f(x)\\right\\} \\leq b_{x}+z_{1-\\frac{\\alpha}{2}} v_{x}\\right) \\\\ &amp; =\\mathbb{P}\\left(\\widehat{f}_{h}(x)-n^{-2 / 5}\\left\\{b_{x}+z_{1-\\frac{\\alpha}{2}} v_{x}\\right\\}\\right. \\\\ &amp; \\qquad\\qquad \\left. \\leq f(x)\\leq \\hat{f}_{h}(x)-n^{-2 / 5}\\left\\{b_{x}-z_{1-\\frac{\\alpha}{2}} v_{x}\\right\\}\\right) \\end{align*}\\] Esta expresión nos dice que con una probabilidad de \\(1-\\alpha\\) se tiene que \\[\\begin{equation*} \\begin{aligned} &amp; \\left[\\hat{f}_{h}(x)-\\frac{h^{2}}{2} f^{\\prime \\prime}(x) \\mu_{2}(K)-z_{1-\\frac{\\alpha}{2}} \\sqrt{\\frac{f(x)\\|K\\|_{2}^{2}}{n h}}\\right. \\\\ &amp; \\left.\\widehat{f}_{h}(x)-\\frac{h^{2}}{2} f^{\\prime \\prime}(x) \\mu_{2}(K)+z_{1-\\frac{a}{2}} \\sqrt{\\frac{f(x)\\|K\\|_{2}^{2}}{n h}}\\right] \\end{aligned} \\end{equation*}\\] Al igual que en los casos anteriores, este invtervalo no es útil ya que depende de \\(f(x)\\) y \\(f^{\\prime\\prime} (x)\\). Si \\(h\\) es pequeño relativamente a \\(n^{-\\frac{1}{5}}\\) entonces el segundo término \\(\\frac{h^{2}}{2} f^{\\prime \\prime}(x) \\mu_{2}(K)\\) podría ser ignorado. Podemos reemplazar \\(f(x)\\) por su estimador \\(\\hat{f}_{h}(x)\\). Entonces tendríamos una intervalo aplicable a nuestro caso \\[\\begin{equation*} \\left[\\hat{f_{h}}(x)-z_{1-\\frac{\\alpha}{2}} \\sqrt{\\frac{\\hat{f_{h}}(x)\\|K\\|_{2}^{2}}{n h}}, \\hat{f}_{h}(x)+z_{1-\\frac{\\alpha}{2}} \\sqrt{\\frac{\\hat{f}_{h}(x)\\|\\mathrm{K}\\|_{2}^{2}}{n h}}\\right] \\end{equation*}\\] Nota: Este intervalo de confianza solo funciona en cada punto particular de \\(f(x)\\). Existe una versión más general para determinar la banda de confianza de toda la función. Por favor revisar la página 62 de (Härdle et al. 2004). 2.5 Laboratorio Comenzaremos con una librería bastante básica llamada . 2.5.1 Efecto de distintos Kernels en la estimación x &lt;- read.csv(&quot;data/stockres.txt&quot;) x &lt;- unlist(x) summary(x) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## -0.6118200 -0.0204085 -0.0010632 -0.0004988 0.0215999 0.1432286 library(KernSmooth) fhat_normal &lt;- bkde(x, kernel = &quot;normal&quot;, bandwidth = 0.05) plot(fhat_normal, type = &quot;l&quot;) fhat_unif &lt;- bkde(x, kernel = &quot;box&quot;, bandwidth = 0.05) plot(fhat_unif, type = &quot;l&quot;) fhat_epanech &lt;- bkde(x, kernel = &quot;epanech&quot;, bandwidth = 0.05) plot(fhat_epanech, type = &quot;l&quot;) fhat_biweight &lt;- bkde(x, kernel = &quot;biweight&quot;, bandwidth = 0.05) plot(fhat_biweight, type = &quot;l&quot;) fhat_triweight &lt;- bkde(x, kernel = &quot;triweight&quot;, bandwidth = 0.05) plot(fhat_triweight, type = &quot;l&quot;) 2.5.2 Efecto del ancho de banda en la estimación ** Kernel uniforme ** fhat &lt;- bkde(x, kernel = &quot;box&quot;, bandwidth = 0.001) plot(fhat, type = &quot;l&quot;) fhat &lt;- bkde(x, kernel = &quot;box&quot;, bandwidth = 0.5) plot(fhat, type = &quot;l&quot;) ** Kernel Epanechnikov ** fhat &lt;- bkde(x, kernel = &quot;epa&quot;, bandwidth = 0.001) plot(fhat, type = &quot;l&quot;) fhat &lt;- bkde(x, kernel = &quot;epa&quot;, bandwidth = 0.5) plot(fhat, type = &quot;l&quot;) suppressMessages(library(tidyverse)) library(gganimate) fani &lt;- tibble() for (b in seq(0.001, 0.02, length.out = 40)) { f &lt;- bkde(x, kernel = &quot;epa&quot;, bandwidth = b, gridsize = length(x)) fani &lt;- fani %&gt;% bind_rows(tibble(xreal = sort(x), x = f$x, y = f$y, bw = b)) } ggplot(data = fani) + geom_line(aes(x, y), color = &quot;blue&quot;) + labs(title = paste0(&quot;Ancho de banda = {closest_state}&quot;)) + transition_states(bw) + view_follow() + theme_minimal(base_size = 20) # anim_save(&#39;manual_figure/bandwidth-animation.gif&#39;) Nota: - Construya una variable llamada u que sea una secuencia de -0.15 a 0.15 con un paso de 0.01 - Asigne x a los datos stockrel y calcule su media y varianza. - Usando la función dnorm construya los valores de la distribución de los datos usando la media y varianza calculada anteriormente. Asigne a esta variable f\\_param. - Defina un ancho de banda h en 0.02 - Construya un histograma para estos datos con ancho de banda h. Llame a esta variable f\\_hist - Usando el paquete KernSmooth y la función bkde, construya una función que calcule el estimador no paramétrico con un núcleo Epanechivok para un ancho de banda \\(h\\). Llame a esta variable f\\_epa. - Dibuje en el mismo gráfico la estimación paramétrica y no paramétrica. x &lt;- read.csv(&quot;data/stockres.txt&quot;) x &lt;- unlist(x) # Eliminar nombres de las columnas names(x) &lt;- NULL u &lt;- seq(-0.15, 0.15, by = 0.01) mu &lt;- mean(x) sigma &lt;- sd(x) f_param &lt;- dnorm(u, mean = mu, sd = sigma) h &lt;- 0.02 n_bins &lt;- floor(diff(range(x))/h) f_hist &lt;- hist(x, breaks = n_bins) f_epa &lt;- as.data.frame(bkde(x, kernel = &quot;epa&quot;, bandwidth = h)) x_df &lt;- data.frame(x) library(ggplot2) ggplot(x_df, aes(x)) + geom_histogram(aes(y = ..density..), binwidth = 0.02, col = &quot;black&quot;, fill = &quot;white&quot;) + stat_function(fun = dnorm, args = list(mean = mu, sd = sigma), color = &quot;red&quot;) + geom_line(data = f_epa, aes(x, y), color = &quot;blue&quot;) + theme_minimal(base_size = 20) 2.5.3 Ancho de banda óptimo Usemos la regla de la normal o también conocida como Silverman. Primero recuerde que en este caso se asume que \\(f(x)\\) sigue una distribución normal. En este caso, lo que se obtiene es que \\[\\begin{align*} \\Vert f^{\\prime \\prime} \\Vert_2^2 &amp; = \\sigma ^{-5} \\int \\{\\phi^{\\prime \\prime}\\}^2 dx \\\\ &amp; = \\sigma ^{-5} \\frac{3}{8\\sqrt{\\pi}} \\approx 0.212 \\sigma^{-5} \\end{align*}\\] donde \\(\\phi\\) es la densidad de una normal estándar. El estimador para \\(\\sigma\\) es \\[ s = \\sqrt{\\frac{1}{n-1} \\sum_{i=1}^n (x_i - \\bar{x})^2 }. \\] Y usando el cálculo realizado anteriormente, se obtiene que \\[ h_{normal} = \\left( \\frac{4 s^5}{3n} \\right)^{1/5} \\approx 1.06 s n^{-1/5}. \\] Un estimador más robusto es \\[ h_{normal} = 1.06 \\min \\left\\{ s , \\frac{IQR}{1.34} \\right\\} n^{-1/5}. \\] ¿Por qué es \\(IQR / 1.34\\)? s &lt;- sd(x) n &lt;- length(x) h_normal &lt;- 1.06 * s * n^(-1/5) h &lt;- h_normal n_bins &lt;- floor(diff(range(x))/h) f_hist &lt;- hist(x, breaks = n_bins, plot = FALSE) f_epa &lt;- as.data.frame(bkde(x, kernel = &quot;epa&quot;, bandwidth = h)) ggplot(x_df, aes(x)) + geom_histogram(aes(y = ..density..), binwidth = h, col = &quot;black&quot;, fill = &quot;white&quot;) + stat_function(fun = dnorm, args = list(mean = mu, sd = sigma), color = &quot;red&quot;) + geom_line(data = f_epa, aes(x, y), color = &quot;blue&quot;) + theme_minimal(base_size = 20) h_iqr &lt;- 1.06 * min(s, IQR(x)/1.34) * n^(-1/5) h &lt;- h_iqr n_bins &lt;- floor(diff(range(x))/h) f_hist &lt;- hist(x, breaks = n_bins, plot = FALSE) f_epa &lt;- as.data.frame(bkde(x, kernel = &quot;epa&quot;, bandwidth = h)) ggplot(x_df, aes(x)) + geom_histogram(aes(y = ..density..), binwidth = h, col = &quot;black&quot;, fill = &quot;white&quot;) + stat_function(fun = dnorm, args = list(mean = mu, sd = sigma), color = &quot;red&quot;) + geom_line(data = f_epa, aes(x, y), color = &quot;blue&quot;) + theme_minimal(base_size = 20) Una librería más especializada es (non-parametric). library(np) x.eval &lt;- seq(-0.2, 0.2, length.out = 200) h_normal_np &lt;- npudensbw(dat = x, bwmethod = &quot;normal-reference&quot;) dens.ksum &lt;- npksum(txdat = x, exdat = x.eval, bws = h_normal_np$bw)$ksum/(n * h_normal_np$bw[1]) dens.ksum.df &lt;- data.frame(x = x.eval, y = dens.ksum) ggplot(x_df, aes(x)) + geom_histogram(aes(y = ..density..), binwidth = h_normal_np$bw, col = &quot;black&quot;, fill = &quot;white&quot;) + stat_function(fun = dnorm, args = list(mean = mu, sd = sigma), color = &quot;red&quot;) + geom_line(data = dens.ksum.df, aes(x, y), color = &quot;blue&quot;) + theme_minimal(base_size = 20) 2.5.4 Validación cruzada La forma que vimos en clase es la de validación cruzada por mínimos cuadrados``least-square cross validation’’ la cual se puede ejecutar con este comando. h_cv_np_ls &lt;- npudensbw(dat = x, bwmethod = &quot;cv.ls&quot;, ckertype = &quot;epa&quot;, ckerorder = 2) ## Multistart 1 of 1 | Multistart 1 of 1 | Multistart 1 of 1 | Multistart 1 of 1 / Multistart 1 of 1 | Multistart 1 of 1 | dens.np &lt;- npudens(h_cv_np_ls) plot(dens.np, type = &quot;b&quot;) dens.np.df &lt;- data.frame(x = dens.np$eval[, 1], y = dens.np$dens) ggplot(x_df, aes(x)) + geom_histogram(aes(y = ..density..), binwidth = h_cv_np_ls$bw, col = &quot;black&quot;, fill = &quot;white&quot;) + stat_function(fun = dnorm, args = list(mean = mu, sd = sigma), color = &quot;red&quot;) + geom_line(data = dens.np.df, aes(x, y), color = &quot;blue&quot;) + theme_minimal(base_size = 20) 2.5.5 Temas adicionales ** Reducción del sesgo ** Como lo mencionamos en el texto, una forma de mejorar el sesgo en la estimación es suponer que la función de densidad es más veces diferenciable. Esto se logra asumiendo que el Kernel es más veces diferenciable. h_cv_np_ls &lt;- npudensbw(dat = x, bwmethod = &quot;cv.ls&quot;, ckertype = &quot;epa&quot;, ckerorder = 4) ## Multistart 1 of 1 | Multistart 1 of 1 | Multistart 1 of 1 | Multistart 1 of 1 / Multistart 1 of 1 | Multistart 1 of 1 | dens.np &lt;- npudens(h_cv_np_ls) plot(dens.np, type = &quot;b&quot;, lwd = 2) dens.np.df &lt;- data.frame(x = dens.np$eval[, 1], y = dens.np$dens) ggplot(x_df, aes(x)) + geom_histogram(aes(y = ..density..), binwidth = h_cv_np_ls$bw, col = &quot;black&quot;, fill = &quot;white&quot;) + stat_function(fun = dnorm, args = list(mean = mu, sd = sigma), color = &quot;red&quot;) + geom_line(data = dens.np.df, aes(x, y), color = &quot;blue&quot;) + theme_minimal(base_size = 20) Otra forma de estimar el ancho de banda Otra forma de estimar ancho de bandas óptimos es usando máxima verosimilitud. Les dejo de tarea revisar la sección 1.1 del artículo de (Hall 1987) para entender su estructura. h_cv_np_ml &lt;- npudensbw(dat = x, bwmethod = &quot;cv.ml&quot;, ckertype = &quot;epanechnikov&quot;) ## Multistart 1 of 1 | Multistart 1 of 1 | Multistart 1 of 1 | Multistart 1 of 1 / Multistart 1 of 1 | Multistart 1 of 1 | dens.np &lt;- npudens(h_cv_np_ml) plot(dens.np, type = &quot;b&quot;) dens.np.df &lt;- data.frame(x = dens.np$eval[, 1], y = dens.np$dens) ggplot(x_df, aes(x)) + geom_histogram(aes(y = ..density..), binwidth = h_cv_np_ml$bw, col = &quot;black&quot;, fill = &quot;white&quot;) + stat_function(fun = dnorm, args = list(mean = mu, sd = sigma), color = &quot;red&quot;) + geom_line(data = dens.np.df, aes(x, y), color = &quot;blue&quot;) + theme_minimal(base_size = 20) h_cv_np_ml &lt;- npudensbw(dat = x, bwmethod = &quot;cv.ml&quot;, ckertype = &quot;epanechnikov&quot;, ckerorder = 4) ## Multistart 1 of 1 | Multistart 1 of 1 | Multistart 1 of 1 | Multistart 1 of 1 / Multistart 1 of 1 | Multistart 1 of 1 | dens.np &lt;- npudens(h_cv_np_ml) plot(dens.np, type = &quot;b&quot;) dens.np.df &lt;- data.frame(x = dens.np$eval[, 1], y = dens.np$dens) ggplot(x_df, aes(x)) + geom_histogram(aes(y = ..density..), binwidth = h_cv_np_ml$bw, col = &quot;black&quot;, fill = &quot;white&quot;) + stat_function(fun = dnorm, args = list(mean = mu, sd = sigma), color = &quot;red&quot;) + geom_line(data = dens.np.df, aes(x, y), color = &quot;blue&quot;) + theme_minimal(base_size = 20) fani &lt;- tibble() for (b in seq(0.001, 0.05, length.out = 40)) { f &lt;- npudens(tdat = x, ckertype = &quot;epanechnikov&quot;, bandwidth.compute = FALSE, bws = b) fani &lt;- fani %&gt;% bind_rows(tibble(xreal = sort(x), x = f$eval$x, y = f$dens, bw = b)) } ggplot(data = fani) + geom_line(aes(x, y), color = &quot;blue&quot;) + labs(title = paste0(&quot;Ancho de banda = {closest_state}&quot;)) + theme_minimal(base_size = 20) + transition_states(bw) + view_follow() # anim_save(&#39;manual_figure/bandwidth-animation-np.gif&#39;) Ejercicio 2.5 Implementar el intervalo confianza visto en clase para estimadores de densidades por núcleos y visualizarlo de en ggplot. Si se atreven: ¿Se podría hacer una versión animada de ese gráfico para visualizar el significado real de este el intervalo de confianza? References "],
["jacknife-y-bootstrap.html", "Capítulo 3 Jacknife y Bootstrap 3.1 Caso concreto 3.2 Jacknife 3.3 Bootstrap 3.4 Ejercicios", " Capítulo 3 Jacknife y Bootstrap Suponga que se quiere estimar un intervalo de confianza para la media \\(\\mu\\) desconocida de un conjunto de datos \\(X_{1},\\ldots, X_{n}\\) que tiene distribución \\(\\mathcal{N}\\left(\\mu ,\\sigma^{2}\\right)\\). Primero se conoce que \\[\\begin{equation*} \\sqrt{n}\\left( \\hat{\\mu} - \\mu \\right) \\xrightarrow{\\mathcal{L}} \\mathcal{N}\\left(0,\\sigma^{2}\\right), \\end{equation*}\\] y esto nos permite escribir el intervalo de confianza como \\[\\begin{equation*} \\left[ \\hat{\\mu} - \\hat{\\sigma}z_{1-\\frac{\\alpha}{2}} , \\hat{\\mu} + \\hat{\\sigma}z_{1-\\frac{\\alpha}{2}}\\right] \\end{equation*}\\] donde \\(z_{1-\\frac{\\alpha}{2}}\\) es el cuantil \\(1-\\frac{\\alpha}{2}\\) de una normal estándar. La expresión anterior es posible ya que el supuesto es que la distribución de \\(\\hat{\\theta}\\) es normal. Nota: ¿Qué pasaría si este supuesto es falso o al menos no conocemos la distribución de \\(\\hat{\\theta}\\)? ¿Cómo podemos encontrar ese intervalo de confianza? Nota: Para una muestra fija, el estimador anterior \\(\\hat{\\mu}\\) solamente un valor. No se conoce la distribución de \\(\\hat{\\mu}\\). Lo único que se puede estimar son valores puntuales como la media, varianza, mediana, etc, pero no sabemos nada de su distribución. 3.1 Caso concreto Suponga que tenemos la siguiente tabla de datos, que representa una muestra de tiempos y distancias de viajes en Atlanta. Cargamos la base de la siguiente forma: CommuteAtlanta &lt;- read.csv2(&quot;data/CommuteAtlanta.csv&quot;) City Age Distance Time Sex Atlanta 19 10 15 M Atlanta 55 45 60 M Atlanta 48 12 45 M Atlanta 45 4 10 F Atlanta 48 15 30 F Atlanta 43 33 60 M Para este ejemplo tomaremos la variable que la llamaremos para ser más breves. En este caso note que x &lt;- CommuteAtlanta$Time La media es 29.11 y su varianza 429.2483968. Para efectos de lo que sigue, asignaremos la varianza a la variable \\(T_n\\) Tn &lt;- var(x) A partir de estos dos valores, ¿Cuál sería un intervalo de confianza para la media? Note que esta pregunta es difícil ya que no tenemos ningún tipo de información adicional. Las dos técnicas que veremos a continuación nos permitirán extraer información adicional de la muestra. Nota: Para efectos de este capítulo, llamaremos \\(T_{n}=T\\left( X_{1},\\ldots,X_{n}\\right)\\) al estadístico formado por la muestra de los \\(X_{i}\\)’s. 3.2 Jacknife Esta técnica fue propuesta por y consiste en la siguiente observación. Se puede probar que muchos de los estimadores tiene la propiedad que \\[\\begin{equation} \\operatorname{Sesgo}\\left(T_{n}\\right)=\\frac{a}{n}+\\frac{b}{n^{2}}+O\\left(\\frac{1}{n^{3}}\\right) \\end{equation}\\] para algún \\(a\\) and \\(b\\). Por ejemplo \\(\\sigma^{2}=\\mathrm{Var}\\left(X_{i}\\right)\\) y sea \\(\\widehat{\\sigma}_{n}^{2}=n^{-1} \\sum_{i=1}^{n}\\left(X_{i}-\\right.\\) \\(\\bar{X})^{2}\\). Entonces, \\[\\begin{equation*} \\mathbb{E}\\left(\\widehat{\\sigma}_{n}^{2}\\right)= \\frac{n-1}{n}\\sigma^{2} \\end{equation*}\\] por lo tanto \\[\\begin{equation*} \\mathrm{Sesgo} = -\\frac{\\sigma^{2}}{n} \\end{equation*}\\] Por lo tanto en este caso \\(a=-\\sigma^{2}\\) y \\(b=0\\). Defina \\(T_{(-i)}\\) como el estimador \\(T_{n}\\) pero eliminando el \\(i\\)-ésimo término. Es claro que en este contexto, se tiene que \\[\\begin{equation} \\operatorname{Sesgo}\\left(T_{(-i)}\\right)=\\frac{a}{n-1}+\\frac{b}{(n-1)^{2}}+O\\left(\\frac{1}{(n-1)^{3}}\\right) \\end{equation}\\] Ejercicio 3.1 Una forma fácil de construir los \\(T_{(-i)}\\) es primero replicando la matriz de datos múltiple veces usando el producto de kronecker n &lt;- length(x) jackdf &lt;- kronecker(matrix(1, 1, n), x) 15 15 15 15 15 15 15 15 15 15 60 60 60 60 60 60 60 60 60 60 45 45 45 45 45 45 45 45 45 45 10 10 10 10 10 10 10 10 10 10 30 30 30 30 30 30 30 30 30 30 60 60 60 60 60 60 60 60 60 60 45 45 45 45 45 45 45 45 45 45 10 10 10 10 10 10 10 10 10 10 25 25 25 25 25 25 25 25 25 25 15 15 15 15 15 15 15 15 15 15 Y luego se elimina la diagonal diag(jackdf) &lt;- NA NA 15 15 15 15 15 15 15 15 15 60 NA 60 60 60 60 60 60 60 60 45 45 NA 45 45 45 45 45 45 45 10 10 10 NA 10 10 10 10 10 10 30 30 30 30 NA 30 30 30 30 30 60 60 60 60 60 NA 60 60 60 60 45 45 45 45 45 45 NA 45 45 45 10 10 10 10 10 10 10 NA 10 10 25 25 25 25 25 25 25 25 NA 25 15 15 15 15 15 15 15 15 15 NA Cada columna contiene toda la muestra excepto el \\(i\\)-ésimo elemento. Solo basta estimar la media de cada columna: T_i &lt;- apply(jackdf, 2, var, na.rm = TRUE) x 429.7098 428.1905 429.6023 429.3756 430.1087 428.1905 429.6023 429.3756 430.0764 429.7098 Definamos el sesgo jackife como \\[\\begin{equation*} b_{jack} = (n-1) (\\overline{T}_{n} - T_{n}) \\end{equation*}\\] donde \\[\\begin{equation*} \\overline{T}_{n} = \\frac{1}{n} \\sum_{i=1}^{n} T_{(-i)} \\end{equation*}\\] Ejercicio 3.2 En nuestro caso tendríamos lo siguiente: (bjack &lt;- (n - 1) * (mean(T_i) - Tn)) ## [1] 0 Es decir, que los generan estimadores de que contienen el mismo sesgo. Observe que \\(b_{jack}\\) tiene la siguiente propiedad \\[\\begin{align*} \\mathbb{E}\\left(b_{\\text {jack}}\\right) &amp;= (n-1)\\left(\\mathbb{E}\\left[\\overline{T}_{n}\\right] - \\mathbb{E}\\left[T_{n}\\right]\\right) \\\\ &amp;= (n-1)\\left(\\mathbb{E}\\left[\\overline{T}_{n}\\right] - \\theta + \\theta - \\mathbb{E}\\left[T_{n}\\right]\\right) \\\\ &amp; =(n-1)\\left(\\mathrm{Sesgo} \\left(\\overline{T}_{n}\\right) -\\mathrm{Sesgo}\\left(T_{n}\\right)\\right) \\\\ &amp; =(n-1)\\left[\\left(\\frac{1}{n-1} -\\frac{1}{n}\\right) a+\\left(\\frac{1}{(n-1)^{2}} -\\frac{1}{n^{2}}\\right) b+O\\left(\\frac{1}{n^{3}}\\right)\\right] \\\\ &amp; =\\frac{a}{n} +\\frac{(2 n-1) b}{n^{2}(n-1)} +O\\left(\\frac{1}{n^{2}}\\right) \\\\ &amp; =\\operatorname{Sesgo}\\left(T_{n}\\right) +O\\left(\\frac{1}{n^{2}}\\right)\\\\ \\end{align*}\\] Nota: Es decir, en general, el estimador \\(b_{\\text{jack}}\\) aproxima correctamente \\(\\mathrm{Sesgo}\\left( T_{n} \\right)\\) hasta con un error del \\(n^{-2}\\). Podemos usar los \\(T\\_i\\) para generar muestras adicionales para estimar el parámetro \\(\\theta\\). En este caso defina el siguiente estimador: \\[ \\widetilde{T}_{i}=n T_{n}-(n-1) T_{(-i)}. \\] Nota: A \\(\\widetilde{T}_{i}\\) se le llaman pseudo-valores y representa el aporte o peso que tiene la variable \\(X_{i}\\) para estimar \\(T_{n}\\). Ejercicio 3.3 Usado un cálculo similar para el \\(b_{jack}\\) pruebe que \\[ \\operatorname{Sesgo}\\left(T_{\\text {jack} }\\right)=-\\frac{b}{n(n-1)}+O\\left(\\frac{1}{n^{2}}\\right)=O\\left(\\frac{1}{n^{2}}\\right). \\] ¿Qué conclusión se obtiene de este cálculo? Ejercicio 3.4 Los pseudo-valores se estiman de forma directa como, pseudo &lt;- n * Tn - (n - 1) * T_i pseudo[1:10] ## [1] 199.02972209 957.16225222 252.64417993 365.79679037 -0.06666345 ## [6] 957.16225222 252.64417993 365.79679037 16.09799519 199.02972209 Lo importante acá es notar la similitud que tiene con los datos reales, plot(x = x, y = pseudo) Con estos pseudo-valores, es posible estimar la media y la varianza de \\(T_{n}\\) con sus respectivos estimadores: \\[ T_{\\text {jack }}=\\frac{1}{n} \\sum_{i=1}^{n} \\widetilde{T}_{i} \\] donde \\[ v_{jack}=\\frac{\\sum_{i=1}^{n}\\left(\\widetilde{T}_{i}-\\frac{1}{n} \\sum_{i=1}^{n} \\widetilde{T}_{i}\\right)^{2}}{n(n-1)}. \\] Nota: Sin embargo, se puede demostrar fácilmente que se pueden usar pseudovalores para construir una prueba normal de hipótesis. Dado que cada pseudovalor es independiente e idénticamente distribuido (iid), se deduce que su promedio se ajusta a una distribución normal a medida que el tamaño de la muestra aumenta. El promedio de los pseudovalores es solo \\(T_ {jack}\\) y el valor esperado de ese promedio, debido a la construcción a la imparcialidad del estimador, es el parámetro bajo investigación, \\(\\theta\\). Por lo tanto, tenemos que \\[ \\frac{\\sqrt{n}\\left(T_{jack}-\\theta\\right)}{\\sqrt{v_{jack}}} \\rightarrow N(0,1). \\] Ejercicio 3.5 (Tjack &lt;- mean(pseudo)) ## [1] 429.2484 (Vjack &lt;- var(pseudo, na.rm = TRUE)) ## [1] 2701991 (sdjack &lt;- sqrt(Vjack)) ## [1] 1643.774 (z &lt;- qnorm(1 - 0.05/2)) ## [1] 1.959964 c(Tjack - z * sdjack/sqrt(n), Tjack + z * sdjack/sqrt(n)) ## [1] 285.1679 573.3289 3.3 Bootstrap Este método es un poco más sencillo de implementar que Jacknife y es igualmente de eficaz propuesto por . Primero recordemos que estamos estimando una estadístico a partir de una muestra de modo que \\(T_{n}=g\\left( X_{1},\\ldots,X_{n} \\right)\\) donde \\(g\\) es cualquier función (media, varianza, quantiles, etc). Supongamos que conocemos la distribución real de los \\(X\\)’s, llamada \\(F(x)\\). Si uno quisiera estimar la varianza de \\(X\\) basta con hacer \\[\\begin{equation*} \\mathrm{Var}_{F}\\left(T_{n}\\right) = \\frac{\\sigma^{2}}{n}=\\frac{\\int x^{2} dF(x)-\\left(\\int x dF(x)\\right)^{2}}{n} \\end{equation*}\\] donde \\(\\sigma^{2} = \\mathrm{Var}\\left(X\\right)\\) y el subindice \\(F\\) es solo para indicar la dependencia con la distribución real. Ahora dado que no tenemos la distribución real \\(F(x)\\), una opción es encontrar un estimador de esta llamado \\(\\hat{F}_n\\). La técnica de boostrap se basa en extraer muchas muestras iid de la distribución \\(\\hat{F}_n\\) de modo que se pueda conocer su varianza. En simple pasos la técnica es Seleccione \\(X_{1}^{*}, \\ldots, X_{n}^{*} \\sim \\widehat{F}_{n}\\) Estime \\(T_{n}^{*}=g\\left(X_{1}^{*}, \\ldots, X_{n}^{*}\\right)\\) Repita los Pasos 1 y 2, \\(B\\) veces para obtener \\(T_{n, 1}^{*}, \\ldots, T_{n, B}^{*}\\) Estime \\[ v_{\\mathrm{boot}}=\\frac{1}{B} \\sum_{b=1}^{B}\\left(T_{n, b}^{*}-\\frac{1}{B} \\sum_{r=1}^{B} T_{n, r}^{*}\\right)^{2} \\] Por la ley de los grandes números tenemos que \\[\\begin{equation} v_{\\mathrm{boot}} \\stackrel{\\mathrm{a.s.}}{\\longrightarrow} \\mathbb{V}_{\\widehat{F}_{n}}\\left(T_{n}\\right), \\text {\\quad si } B \\rightarrow \\infty. \\end{equation}\\] además llamaremos, \\[\\begin{equation*} \\widehat{\\mathrm{se}}_{\\mathrm{boot}}=\\sqrt{v_{\\mathrm{boot}}} \\end{equation*}\\] En pocas palabras lo que tenemos es que \\[\\begin{align*} \\text {Mundo Real: } &amp; F &amp; \\Longrightarrow X_{1}, \\ldots, X_{n} &amp; \\Longrightarrow &amp; T_{n} = g\\left(X_{1}, \\ldots, X_{n}\\right) \\\\ \\text {Mundo Bootstrap: } &amp; \\widehat{F}_{n} &amp; \\Longrightarrow X_{1}^{*}, \\ldots, X_{n}^{*} &amp; \\Longrightarrow &amp; T_{n}^{*}=g\\left(X_{1}^{*}, \\ldots, X_{n}^{*}\\right) \\end{align*}\\] En términos de convergencia lo que se tiene es que \\[ \\mathrm{Var}_{F}\\left(T_{n}\\right) \\overbrace{\\approx}^{O(1 / \\sqrt{n})} \\mathrm{Var}_{\\widehat{F}_{n}}\\left(T_{n}\\right) \\overbrace{\\approx}^{O(1 / \\sqrt{B})} v_{b o o t} \\] Nota: ¿Cómo extraemos una muestra de \\(\\hat{F}_n\\)? Recuerden que \\(\\hat{F}_{n}\\) asigna la probabilidad de \\(\\frac{1}{n}\\) a cada valor usado para construirla. Por lo tanto, todos los puntos originales \\(X_{1},\\ldots,X_{n}\\) tienen probabilidad \\(\\frac{1}{n}\\) de ser escogidos, que resulta ser equivalente a un muestreo con remplazo \\(n\\)-veces. Así que basta cambiar el punto 1. del algoritmo mencionando anteriormente con Seleccione una muestra con remplazo \\(X_{1}^{*}, \\ldots, X_{n}^{*}\\) de \\(X_{1},\\ldots,X_{n}\\). Ejercicio 3.6 En este ejemplo podemos tomar \\(B=1000\\) y construir esa cantidad de veces nuestro estimador. B &lt;- 1000 Tboot_b &lt;- NULL for (b in 1:B) { xb &lt;- sample(x, size = n, replace = TRUE) Tboot_b[b] &lt;- var(xb) } Tboot_b[1:10] ## [1] 414.1915 391.2966 310.2777 468.8409 400.5235 380.8023 496.4924 418.5968 ## [9] 461.3902 547.3446 plot(Tboot_b) Por supuesto podemos encontrar los estadísticos usuales para esta nueva muestra (Tboot &lt;- mean(Tboot_b)) ## [1] 428.0777 (Vboot &lt;- var(Tboot_b)) ## [1] 5431.092 (sdboot &lt;- sqrt(Vboot)) ## [1] 73.69594 ``` 3.3.1 Intervalos de confianza Este es el más sencillo y se escribe como \\[\\begin{equation} T_{n} \\pm z_{\\alpha / 2} \\widehat{\\mathrm{Se}}_{\\mathrm{boot}} \\end{equation}\\] Nota: Este intervalo solo funciona si la distribución de \\(T_{n}\\) es normal. Ejercicio 3.7 El cálculo de este intervalo es c(Tn - z * sdboot, Tn + z * sdboot) ## [1] 284.8070 573.6898 ``` Sea \\(\\theta=T(F)\\) y \\(\\widehat{\\theta}_{n}=T\\left(\\widehat{F}_{n}\\right)\\) y defina la cantidad pivotal \\(R_{n}=\\widehat{\\theta}_{n}-\\theta .\\) Sea \\(H(r)\\) la función de distribución del pivote: \\[ H(r)=\\mathbb{P}_{F}\\left(R_{n} \\leq r\\right). \\] Además considere \\(C_{n}^{\\star}=(a, b)\\) donde \\[ a=\\widehat{\\theta}_{n}-H^{-1}\\left(1-\\frac{\\alpha}{2}\\right) \\quad \\text { y } \\quad b=\\widehat{\\theta}_{n}-H^{-1}\\left(\\frac{\\alpha}{2}\\right). \\] Se sigue que \\[\\begin{align*} \\mathbb{P}(a \\leq \\theta \\leq b) &amp;=\\mathbb{P}\\left(\\widehat{\\theta}_{n}-b \\leq R_{n} \\leq \\widehat{\\theta}_{n}-a\\right) \\\\ &amp;=H\\left(\\widehat{\\theta}_{n}-a\\right)-H\\left(\\widehat{\\theta}_{n}-b\\right) \\\\ &amp;=H\\left(H^{-1}\\left(1-\\frac{\\alpha}{2}\\right)\\right)-H\\left(H^{-1}\\left(\\frac{\\alpha}{2}\\right)\\right) \\\\ &amp;=1-\\frac{\\alpha}{2}-\\frac{\\alpha}{2}=1-\\alpha \\end{align*}\\] Nota: \\(C_{n}^{\\star}=(a, b)\\) es un intervalo de confianza al \\(1-\\alpha\\) de confianza. El problema es que este intervalo depende de \\(H\\) desconocido. Para resolver este problema, se puede construir una versión bootstrap de \\(H\\) usando lo que sabemos hasta ahora. \\[ \\widehat{H}(r)=\\frac{1}{B} \\sum_{b=1}^{B} I\\left(R_{n, b}^{*} \\leq r\\right) \\] donde \\(R_{n, b}^{*}=\\widehat{\\theta}_{n, b}^{*}-\\widehat{\\theta}_{n}\\). Sea \\(r_{\\beta}^{*}\\) el cuantil muestral de tamaño \\(\\beta\\) de \\(\\left(R_{n, 1}^{*}, \\ldots, R_{n, B}^{*}\\right)\\) y sea \\(\\theta_{\\beta}^{*}\\) el cuantil muestral de tamaño \\(\\beta\\) de \\(\\left(\\theta_{n, 1}^{*}, \\ldots, \\theta_{n, B}^{*}\\right)\\). Nota: Según la notación anterior note que \\[\\begin{equation*} r_{\\beta}^{*}= \\theta_{\\beta}^{*}-\\widehat{\\theta}_{n} \\end{equation*}\\] Con estas observaciones It follows that an approximate \\(1-\\alpha\\) confidence interval is \\(C_{n}=(\\widehat{a}, \\widehat{b})\\) where \\[\\begin{align*} \\widehat{a} &amp;= \\widehat{\\theta}_{n}-\\widehat{H}^{-1}\\left(1-\\frac{\\alpha}{2}\\right) &amp;= \\widehat{\\theta}_{n}-r_{1-\\alpha / 2}^{*} &amp;= \\widehat{\\theta}_{n}-\\theta_{1-\\alpha / 2}^{*} + \\widehat{\\theta}_{n} &amp;=2 \\widehat{\\theta}_{n}-\\theta_{1-\\alpha / 2}^{*} \\\\ \\widehat{b} &amp;=\\widehat{\\theta}_{n}-\\widehat{H}^{-1}\\left(\\frac{\\alpha}{2}\\right) &amp;=\\widehat{\\theta}_{n}-r_{\\alpha / 2}^{*} &amp;= \\widehat{\\theta}_{n}-\\theta_{\\alpha / 2}^{*} + \\widehat{\\theta}_{n} &amp;=2 \\widehat{\\theta}_{n}-\\theta_{\\alpha / 2}^{*} \\end{align*}\\] Nota: El intervalo de confianza pivotal de tamaño \\(1-\\alpha\\) es \\[ C_{n}=\\left(2 \\widehat{\\theta}_{n}-\\widehat{\\theta}_{((1-\\alpha / 2) B)}^{*}, 2 \\widehat{\\theta}_{n}-\\widehat{\\theta}_{((\\alpha / 2) B)}^{*}\\right) \\] Ejercicio 3.8 El intervalo anterior para un nivel de 95% se estima de la siguiente forma c(2 * Tn - quantile(Tboot_b, 1 - 0.05/2), 2 * Tn - quantile(Tboot_b, 0.05/2)) ## 97.5% 2.5% ## 267.5099 556.9997 ``` 3.3.2 Intervalo pivotal studentizado Una mejora del intervalo anterior sería normalizar los estimadores previamente \\[ Z_{n}=\\frac{T_{n}-\\theta}{\\widehat{\\mathrm{se}}_{\\mathrm{boot}}}. \\] Como \\(\\theta\\) es desconocido, entonces la versión a estimar es \\[ Z_{n, b}^{*}=\\frac{T_{n, b}^{*}-T_{n}}{\\widehat{\\mathrm{se}}_{b}^{*}} \\] donde \\(\\widehat{\\mathrm{se}}_{b}^{*}\\) es un estimador del error estándar de \\(T_{n, b}^{*}\\) no de \\(T_{n}\\). Nota: Esto requerira estimar la varianza de \\(T_{n,b}^*\\) para cada \\(b\\). Con esto se puede obtener cantidades \\(Z_{n, 1}^{*}, \\ldots, Z_{n, B}^{*}\\) que debería ser próximos a \\(Z_{n}\\). Sea \\(z_{\\alpha}^{*}\\) del \\(\\alpha\\) cuantiĺ de \\(Z_{n, 1}^{*}, \\ldots, Z_{n, B}^{*},\\) entonces \\(\\mathbb{P}\\left(Z_{n} \\leq z_{\\alpha}^{*}\\right) \\approx \\alpha\\). Define el intervalo \\[\\begin{equation*} C_{n}=\\left(T_{n}-z_{1-\\alpha / 2}^{*} \\widehat{\\mathrm{se}}_{\\mathrm{boot}}, T_{n}-z_{\\alpha / 2}^{*} \\widehat{\\mathrm{se}}_{\\mathrm{boot}}\\right) \\end{equation*}\\] Justificado por el siguiente cálculo: \\[\\begin{align*} \\mathbb{P}\\left(\\theta \\in C_{n}\\right) &amp;=\\mathbb{P}\\left(T_{n}-z_{1-\\alpha / 2}^{*} \\widehat{\\mathrm{Se}}_{\\mathrm{boot}} \\leq \\theta \\leq T_{n}-z_{\\alpha / 2}^{*} \\widehat{\\mathrm{Se}}_{\\mathrm{boot}}\\right) \\\\ &amp;=\\mathbb{P}\\left(z_{\\alpha / 2}^{*} \\leq \\frac{T_{n}-\\theta}{\\mathrm{se}_{\\mathrm{boot}}} \\leq z_{1-\\alpha / 2}^{*}\\right) \\\\ &amp;=\\mathbb{P}\\left(z_{\\alpha / 2}^{*} \\leq Z_{n} \\leq z_{1-\\alpha / 2}^{*}\\right) \\\\ &amp; \\approx 1-\\alpha \\end{align*}\\] Ejercicio 3.9 Note que para este caso tenemos que hacer bootstrap para cada estimador bootstrap calculado. B &lt;- 1000 Tboot_b &lt;- NULL Tboot_bm &lt;- NULL sdboot_b &lt;- NULL for (b in 1:B) { xb &lt;- sample(x, size = n, replace = TRUE) Tboot_b[b] &lt;- var(xb) for (m in 1:B) { xbm &lt;- sample(xb, size = n, replace = TRUE) Tboot_bm[b] &lt;- var(xbm) } sdboot_b &lt;- sd(Tboot_bm) } z_star &lt;- (Tboot_b - Tn)/sdboot_b hist(z_star) c(Tn - quantile(z_star, 1 - 0.05/2) * sdboot, Tn - quantile(z_star, 0.05/2) * sdboot) ## 97.5% 2.5% ## 308.6135 518.6002 ``` 3.3.3 Resumiendo Resumiendo todos lo métodos de cálculo de intervalos obtenemos knitr::kable(data.frame(Metodo = c(&quot;Jacknife&quot;, &quot;Bootstrap Normal&quot;, &quot;Bootstrap Pivotal&quot;, &quot;Bootstrap Pivotal Estudentizado&quot;), Inferior = c(Tjack - z * sdjack/sqrt(n), Tn - z * sdboot, 2 * Tn - quantile(Tboot_b, 1 - 0.05/2), Tn - quantile(z_star, 1 - 0.05/2) * sdboot), Superior = c(Tjack + z * sdjack/sqrt(n), Tn + z * sdboot, 2 * Tn - quantile(Tboot_b, 0.05/2), Tn - quantile(z_star, 0.05/2) * sdboot))) Metodo Inferior Superior Jacknife 285.1679 573.3289 Bootstrap Normal 284.8070 573.6898 Bootstrap Pivotal 258.6387 555.6155 Bootstrap Pivotal Estudentizado 308.6135 518.6002 3.4 Ejercicios Repita los ejercicios anteriores para calcular intervalos de confianza para la distancia promedio y la varianza del desplazamiento de las personas. Use los métodos de Jacknife y Bootstrap (con todos sus intervalos de confianza). Dada que la distancia es una medida que puede ser influenciada por distancias muy cortas o muy largas, se puede calcular el logaritmo de esta variable para eliminar la escala de la distancias. Verifique que esta última variable se podría estimar paramétricamente con una distribución normal. Repita los cálculos anteriores tomando como cuantiles los de una normal con media 0 y varianza 1. Compare los intervalos calculados y comente los resultados. "],
["estimación-de-densidades-con-bayes.html", "Capítulo 4 Estimación de densidades con Bayes 4.1 Introducción a la estimación Bayesiana 4.2 Previa de histograma 4.3 Monte Carlo methods 4.4 Ejemplo del viajero 4.5 El algoritmo de Metropolis-Hasting", " Capítulo 4 Estimación de densidades con Bayes 4.1 Introducción a la estimación Bayesiana 4.1.1 Preliminares Recordemos que tenemos \\(f(\\theta)\\) la previa, \\(L(\\theta)\\) la verosimilitud de los datos y \\(f(\\theta|\\text { data })\\) la posterior ajustada a los datos. \\[\\begin{equation*} f(\\theta | \\text { data }) \\propto f(\\theta) L(\\theta) \\end{equation*}\\] Además para el caso de la binomial tenemos que \\[\\begin{equation*} f(y | \\theta)=\\theta^{\\gamma}(1-\\theta)^{(1-\\gamma)} \\end{equation*}\\] y la distribución beta se escribe de la forma \\[\\begin{align*} f(\\theta | a, b) &amp; =\\operatorname{beta}(\\theta | a, b) \\\\ &amp; =\\theta^{(a-1)}(1-\\theta)^{(b-1)} / B(a, b) \\end{align*}\\] donde \\[\\begin{equation*} B(a, b)=\\int_{0}^{1} \\theta^{(a-1)}(1-\\theta)^{(b-1)}\\mathrm{d} \\theta. \\end{equation*}\\] Los valores de \\(a\\) y \\(b\\) controlan la forma de esta distribución Tomado de Kruschke (2014) Una forma alternative es \\(\\mu=a /(a+b)\\) es la media, \\(\\kappa=a+b\\) es la concentración y \\(\\omega=(a-1) /(a+b-2)\\) es la moda de la distribución Beta, entonces se cumple que \\[\\begin{align*} &amp; a=\\mu \\kappa \\quad \\text { y } \\quad b=(1-\\mu) \\kappa \\\\ &amp; a=\\omega(\\kappa-2)+1 \\quad \\text { y } \\quad b=(1-\\omega)(\\kappa-2)+1 \\text { para } \\kappa&gt;2 \\end{align*}\\] Es decir, es posible estimar \\(a\\) y \\(b\\) de \\(\\kappa\\), \\(\\mu\\) y \\(\\omega\\) De acuerdo la combinación de estas dos distribuciones forma una familia conjugada de modo que \\[\\begin{align*} f(\\theta | z, N) &amp; = f(z, N | \\theta) f(\\theta) / f(z, N) \\quad \\\\ &amp; = \\theta^{z}(1-\\theta)^{(N-z)} \\frac{\\theta^{(a-1)}(1-\\theta)^{(b-1)}}{B(a, b)} / p(z, N) \\\\ &amp; = \\theta^{z}(1-\\theta)^{(N-z)} \\theta^{(a-1)}(1-\\theta)^{(b-1)} /[B(a, b) p(z, N)] \\\\ &amp; = \\theta^{((z+a)-1)}(1-\\theta)^{((N-z+b)-1)} /[B(a, b) p(z, N)] \\\\ &amp; = \\theta^{((z+a)-1)}(1-\\theta)^{((N-z+b)-1)} / B(z+a, N-z+b) \\end{align*}\\] 4.1.2 Ejemplo sencillo Suponga que se hace una encuesta a 27 estudiantes y se encuentra que 11 dicen que duermen más de 8 horas diarias y el resto no. Nuestro objetivo es encontrar inferencias sobre la proporción \\(p\\) de estudiantes que duermen al menos 8 horas diarias. El modelo más adecuado es \\[ f(x \\vert p) \\propto p^s (1-p)^f \\] donde \\(s\\) es la cantidad de estudiantes que duermen más de 8 horas y \\(f\\) los que duermen menos de 8 horas. Una primera aproximación para la previa es usar una distribución discreta. En este caso, el investigador asigna una probabilidad a cierta cantidad de horas de sueño, según su experiencia. Así, por ejemplo: (p &lt;- seq(0.05, 0.95, by = 0.1)) ## [1] 0.05 0.15 0.25 0.35 0.45 0.55 0.65 0.75 0.85 0.95 (prior &lt;- c(1, 5.2, 8, 7.2, 4.6, 2.1, 0.7, 0.1, 0, 0)) ## [1] 1.0 5.2 8.0 7.2 4.6 2.1 0.7 0.1 0.0 0.0 (prior &lt;- prior/sum(prior)) ## [1] 0.034602076 0.179930796 0.276816609 0.249134948 0.159169550 0.072664360 ## [7] 0.024221453 0.003460208 0.000000000 0.000000000 plot(p, prior, type = &quot;h&quot;, ylab = &quot;Probabilidad Previa&quot;) El paquete LearnBayes tiene la función pdisc que estima la distribución posterior para una previa discreta binomial. Recuerde que el valor 11 representa la cantidad de estudiantes con más de 8 horas de sueño y 16 lo que no duermen esa cantidad. library(LearnBayes) data &lt;- c(11, 16) post &lt;- pdisc(p, prior, data) round(cbind(p, prior, post), 2) ## p prior post ## [1,] 0.05 0.03 0.00 ## [2,] 0.15 0.18 0.00 ## [3,] 0.25 0.28 0.13 ## [4,] 0.35 0.25 0.48 ## [5,] 0.45 0.16 0.33 ## [6,] 0.55 0.07 0.06 ## [7,] 0.65 0.02 0.00 ## [8,] 0.75 0.00 0.00 ## [9,] 0.85 0.00 0.00 ## [10,] 0.95 0.00 0.00 Y podemos ver la diferencia entre la previa (negro) y la posterior (roja), plot(p, post, type = &quot;h&quot;, col = &quot;red&quot;) lines(p + 0.01, prior, type = &quot;h&quot;) ¿Qué se puede deducir de estos resultados? 4.1.3 Datos reales Continuemos el ejercicio pero esta vez usando datos reales. Carguemos los datos studdendata del paquete LearnBayes. Esta base son preguntas que se le hicieron a un grupo de estudiantes de Bowling Green State University. Para mayor información use ?studentdata. data(&quot;studentdata&quot;) Como solo se tiene la hora de dormir y la hora de despertarse, se debe tomar la diferencia. horas_sueno &lt;- studentdata$WakeUp - studentdata$ToSleep horas_sueno &lt;- na.omit(horas_sueno) summary(horas_sueno) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 2.500 6.500 7.500 7.385 8.500 12.500 hist(horas_sueno, main = &quot;&quot;) Ahora supongamos que se tiene quiere ajustar una previa continua a este modelo. Para esto usaremos una distribución Beta con parámetros \\(\\alpha\\) y \\(\\beta\\), de la forma \\[ f(p\\vert \\alpha, \\beta) \\propto p^{1-\\alpha} (1-p)^{1-\\beta}. \\] El ajuste de los parámetros de la Beta depende mucho de la información previa que se tenga del modelo. Una forma fácil de estimarlo es a través de cuantiles con los cuales se puede reescribir estos parámetros. En particular, suponga que se cree que el \\(50\\%\\) de las observaciones la proporción será menor que 0.3 y el \\(90\\%\\) será menor que 0.5. Para esto ajustaremos los siguientes parámetros quantile2 &lt;- list(p = 0.9, x = 0.5) quantile1 &lt;- list(p = 0.5, x = 0.3) ab &lt;- beta.select(quantile1, quantile2) a &lt;- ab[1] b &lt;- ab[2] s &lt;- 11 f &lt;- 16 En este caso se obtendra la distribución posterior Beta con paramétros \\(\\alpha + s\\) y \\(\\beta + f\\), curve(dbeta(x, a + s, b + f), from = 0, to = 1, xlab = &quot;p&quot;, ylab = &quot;Densidad&quot;, lty = 1, lwd = 4) curve(dbeta(x, s + 1, f + 1), add = TRUE, lty = 2, lwd = 4) curve(dbeta(x, a, b), add = TRUE, lty = 3, lwd = 4) legend(0.7, 4, c(&quot;Previa&quot;, &quot;Verosimilitud&quot;, &quot;Posterior&quot;), lty = c(3, 2, 1), lwd = c(3, 3, 3)) En particular, si estamos interesados en \\(\\mathbb{P}(p&gt;=.5 | \\text { data })\\) se puede estimar con 1 - pbeta(0.5, a + s, b + f) ## [1] 0.0690226 y el intervalo de confianza correspondiente a esta distribución sería qbeta(c(0.05, 0.95), a + s, b + f) ## [1] 0.2555267 0.5133608 Otra opción para estimar este intervalo es simular 1000 veces la distribución beta y observar su comportamiento en los cuantiles ps &lt;- rbeta(1000, a + s, b + f) hist(ps, xlab = &quot;p&quot;, main = &quot;&quot;) La probabilidad que este valor sea mayor que 0.5 es sum(ps &gt;= 0.5)/1000 ## [1] 0.065 quantile(ps, c(0.05, 0.95)) ## 5% 95% ## 0.2571102 0.5102856 4.2 Previa de histograma El caso anterior funciona perfecto dada la combinación Binomial-Beta. ¿Qué pasaría si nuestra previa no está basada beta, sino que quisiéramos extraerla directamente de los datos? El método que usaremos será el siguiente: Elija una cuadrícula de valores de \\(p\\) sobre un intervalo que cubra la densidad posterior. Calcule el producto de la probabilidad \\(L (p)\\) y el \\(f (p)\\) sobre esa grilla. Normalice dividiendo cada producto por la suma de los productos. En esto paso, estamos aproximando la densidad posterior por una probabilidad discreta Distribución en la grilla. Usando el comando sample de R, tome una muestra aleatoria con reemplazo de la distribución discreta. El resultado nos debe arrojar una muestra de la distribución posterior sobre la grilla Suponga nuevamente que tenemos las mismas previas dadas al inicio del capítulo midpt &lt;- seq(0.05, 0.95, by = 0.1) prior &lt;- c(1, 5.2, 8, 7.2, 4.6, 2.1, 0.7, 0.1, 0, 0) prior &lt;- prior/sum(prior) Con la función histprior construye los valores de \\(p\\) sobre una grilla. curve(histprior(x, midpt, prior), from = 0, to = 1, ylab = &quot;Densidad previa&quot;, ylim = c(0, 0.3)) Luego recordando que nuestra posterior es \\(beta(s+1,f+1)\\) tenemos que curve(histprior(x, midpt, prior) * dbeta(x, s + 1, f + 1), from = 0, to = 1, ylab = &quot;Densidad posterior&quot;) Para conseguir la distribución posterior, solo debemos de construirla para una secuencia ordenada de valores \\(p\\) p = seq(0, 1, length = 1000) post = histprior(p, midpt, prior) * dbeta(p, s + 1, f + 1) post = post/sum(post) Finalmente basta con tomar el muestreo de la posterior ps &lt;- sample(p, replace = TRUE, prob = post) hist(ps, xlab = &quot;p&quot;, main = &quot;&quot;) 4.3 Monte Carlo methods El tratamiento clásico de la estimación de parámetros bayesiana nos dice que si tenemos una densidad previa y la ``combinamos’’ con la verosimilitud de los datos, estos nos dará una densidad con más información. Se podría repetir el proceso varias veces para tratar de ajustar mejor la densidad posterior. Sin embargo, se podría usar potencia de los métodos Monte Carlo para que esta búsqueda sea muy efectiva para encontrar los parámetros adecuados. 4.4 Ejemplo del viajero Suponga que tenemos un viajero que quiere estar en 7 lugares distintos (suponga que están en línea recta) y la probabilidad de pasar a un lugar a otro se decide tirando una moneda no sesgada (50% a la derecha y 50% a la izquierda). Este caso sería una simple caminata aleatoria sin ningún interés en particular. Suponga además, que el viajero quiere estar más tiempo donde haya una mayor cantidad de personas \\(P\\) pero siguiendo ese patrón aleatorio. Entonces la forma de describir su decisión de moverse sería: Tira la moneda y decide si va a la izquierda o la derecha Tiene dos opciones Si el lugar nuevo tiene MÁS personas que el actual salta a ese lugar Si el lugar nuevo tiene MENOS personas entonces calcula la probabilidad de moverse como \\(p_{moverse} = P_{nuevo}/P_{actual}\\). Entonces el viajero tira un número aleatorio del 0 al 1 y si este menor que $p_{moverse}$ entonces se mueve. Si tira un número mayor a $p_{moverse}$ se queda donde está. &lt;/TD&gt; P &lt;- 1:7 pos_actual &lt;- sample(P, 1) pos_nueva &lt;- pos_actual n_pasos &lt;- 50000 trayectoria &lt;- numeric(n_pasos) trayectoria[1] &lt;- pos_actual for (k in 2:n_pasos) { # Tira la moneda para decidir moneda &lt;- rbinom(1, 1, 0.5) # moneda es 0 o 1 pos_nueva &lt;- pos_actual if (moneda == 1 &amp; (pos_actual + 1) &lt;= 7) { pos_nueva = pos_actual + 1 } else if (moneda == 0 &amp; (pos_actual - 1) &gt;= 1) { pos_nueva &lt;- pos_actual - 1 } p_moverse &lt;- min(pos_nueva/pos_actual, 1) hay_movimiento &lt;- 1 - p_moverse &lt;= runif(1) if (hay_movimiento) { pos_actual &lt;- pos_nueva } trayectoria[k] &lt;- pos_nueva } df &lt;- data.frame(x = 1:n_pasos, P = trayectoria) ggplot(df[1:200, ]) + geom_line(aes(x, P)) + coord_flip() + theme_minimal(base_size = 16) ggplot(df) + geom_histogram(aes(P), stat = &quot;count&quot;) + theme_minimal(base_size = 16) mean(trayectoria) ## [1] 4.86236 sd(trayectoria) ## [1] 1.79851 4.5 El algoritmo de Metropolis-Hasting El ejemplo anterior era bastante sencillo pero demuestra que se puede encontrar el mejor estimador posible simplemente ejecutando una y otra vez maximizando la estadía en los lugares más poblados. En este ejemplo la función a maximizar es la cantidad de personas \\(P(\\theta)=\\theta\\), pero en general nuestro objetivo será maximizar la distribución posterior \\(f(\\theta| \\text{ datos })\\). En palabras simples el algoritmo de Metropoli Hasting es Simule un valor \\(\\theta^{*}\\) de una densidad de propuesta \\(p\\left(\\theta^{*} | \\theta^{t-1}\\right)\\) Estime la razón \\[ R=\\frac{f\\left(\\theta^{*}\\right) p\\left(\\theta^{t-1} | \\theta^{*}\\right)}{f\\left(\\theta^{t-1}\\right) p\\left(\\theta^{*} | \\theta^{t-1}\\right)} \\] Estima la probabilidad de aceptación \\(p_{\\text {moverse }}=\\min \\{R, 1\\}\\). Tome \\(\\theta^{t}\\) tal que \\(\\theta^{t}=\\theta^{*}\\) con probabilidad \\(p_{\\text {moverse }}\\); en otro caso \\(\\theta^{t}=\\) \\(\\theta^{t-1}\\) El algoritmo de Metropolis-Hastings se puede construir de muchas formas, dependiendo de la densidad de proposición Si esta es independiente de las elecciones anteriores entonces, \\[ p\\left(\\theta^{*} | \\theta^{t-1}\\right)=p\\left(\\theta^{*}\\right) \\] Otras formas es escoger \\[ p\\left(\\theta^{*} | \\theta^{t-1}\\right)=h\\left(\\theta^{*}-\\theta^{t-1}\\right) \\] donde \\(h\\) es simetrica alrededor del origen. En este tipo de cadenas, la razón \\(R\\) tiene la forma \\[ R=\\frac{f\\left(\\theta^{*}\\right)}{f\\left(\\theta^{t-1}\\right)} \\] Una última opción es tomar \\[ \\theta^{*}=\\theta^{t-1}+ Z \\] donde \\(Z\\) es una normal centrada con cierta estructura de varianza. Retomemos el ejemplo del viajero. Supongamos que ahora existen una cantidad infinita de lugares a los que puede ir y que la población de cada isla es proporcional a la densidad posterior. Además, el viajero podría saltar a cualquier isla que quisiera y su probabilidad de salto cae de forma continua en el intervalo \\([0,1]\\). Para hacer este ejemplo concreto, el viajero no conoce cuál es su probabilidad de salto \\(\\theta\\) pero sabe que ha tirado la moneda \\(N\\) veces y observado \\(z\\) exitos. Por lo tanto tendremos una verosimilitud de \\(f(z, N | \\theta)=\\theta^{z}(1-\\theta)^{(N-z)}\\). La previa será dada por \\(f(\\theta)=\\operatorname{beta}(\\theta | a, b)\\). Los saltos serán gobernados por una normal centrada con media \\(\\sigma\\) de modo que \\(\\Delta \\theta \\sim \\mathcal{N}\\left(0,\\sigma^{2}\\right)\\). Entonces el algoritmo de Metropolis Hasting se puede reformular como Simule un valor de salto\\(\\Delta \\theta \\sim \\mathcal{N}\\left(0,\\sigma^{2}\\right)\\) y denote \\(\\theta^{t} = \\theta^{t} + \\Delta\\theta\\). Probabilidad de aceptación $ p_{}$ \\[\\begin{align*} p_{\\text {moverse }} &amp; =\\min \\left(1, \\frac{P\\left(\\theta_{\\ast}\\right)}{P\\left(\\theta_{t-1}\\right)}\\right) \\\\ &amp; =\\min \\left(1, \\frac{p\\left(D | \\theta_{\\ast}\\right) p\\left(\\theta_{\\ast}\\right)}{p\\left(D | \\theta_{t-1}\\right) p\\left(\\theta_{t-1}\\right)}\\right) \\\\ &amp; =\\min \\left(1, \\frac{\\operatorname{Bernoulli}\\left(z, N | \\theta_{\\ast}\\right) \\operatorname{beta}\\left(\\theta_{\\ast} | a, b\\right)}{\\operatorname{Bernoulli}\\left(z, N | \\theta_{t-1}\\right) \\operatorname{beta}\\left(\\theta_{t-1} | a, b\\right)}\\right) \\\\ &amp; =\\min \\left(1, \\frac{\\theta_{\\ast}^{z}\\left(1-\\theta_{\\ast}\\right)^{(N-z)} \\theta_{\\ast} \\left(1-\\theta_{\\ast}\\right)^{(b-1)} / B(a,b)}{\\theta_{t-1}^{z}\\left(1-\\theta_{t-1}\\right)^{(N-z)} \\theta_{t-1}^{(a-1)}\\left(1-\\theta_{t-1}\\right)^{(b-1)} / B(a, b)}\\right) \\end{align*}\\] Tome \\(\\theta_{t}\\) tal que \\(\\theta_{t}=\\theta_{*}\\) con probabilidad \\(p_{\\text {moverse }} ;\\) en otro caso \\(\\theta_{t}=\\) \\(\\theta_{t-1}\\) En el ejemplo del viajero queremos ver la probabilidad \\(\\theta\\) de que salte al siguiente destino. Tomemos \\(\\sigma=0.2\\) y supongamos que se ha visto que el viajero de \\(N=20\\) y \\(z=14\\) éxitos. Por cuestiones de practicidad se tomará \\(\\theta_0 = 0.1\\). # Carga de datos observados datos_observados &lt;- c(rep(0, 6), rep(1, 14)) # Función de verosimilitud Binomial verosimilitud &lt;- function(theta, data) { z &lt;- sum(data) N &lt;- length(data) pDatosDadoTheta &lt;- theta^z * (1 - theta)^(N - z) # Es para asegurarse que los datos caigan en [0,1]. pDatosDadoTheta[theta &gt; 1 | theta &lt; 0] &lt;- 0 return(pDatosDadoTheta) } # densidad previa previa &lt;- function(theta) { pTheta &lt;- dbeta(theta, 1, 1) # Es para asegurarse que los datos caigan en [0,1]. pTheta[theta &gt; 1 | theta &lt; 0] &lt;- 0 return(pTheta) } # densidad posterior posterior &lt;- function(theta, data) { posterior &lt;- verosimilitud(theta, data) * previa(theta) return(posterior) } n_pasos &lt;- 50000 trayectoria &lt;- rep(0, n_pasos) # Valor inicial trayectoria[1] &lt;- 0.01 n_aceptados &lt;- 0 n_rechazados &lt;- 0 sigma &lt;- 0.2 for (t in 2:(n_pasos - 1)) { pos_actual &lt;- trayectoria[t] salto_propuesto &lt;- rnorm(1, mean = 0, sd = sigma) proba_aceptacion &lt;- min(1, posterior(pos_actual + salto_propuesto, datos_observados)/posterior(pos_actual, datos_observados)) # Aceptamos el salto? if (runif(1) &lt; proba_aceptacion) { # Aceptados trayectoria[t + 1] &lt;- pos_actual + salto_propuesto n_aceptados &lt;- n_aceptados + 1 } else { # Rechazos trayectoria[t + 1] &lt;- pos_actual n_rechazados &lt;- n_rechazados + 1 } } Obtenemos una tasa de aceptación del 49.43 y tasa de rechazo del 50.56 Podemos desechar los primeros 500 pasos (por ejemplo) del proceso ya que estos son de “calentamiento”. De esta forma podremos estimar la media y la varianza de las trayectoria. mean(trayectoria[500:n_pasos]) ## [1] 0.6801115 sd(trayectoria[500:n_pasos]) ## [1] 0.09718668 df &lt;- data.frame(x = 1:n_pasos, P = trayectoria) ggplot(df[1:500, ]) + geom_line(aes(x, P), size = 0.5) + coord_flip() + theme_minimal(base_size = 16) ggplot(df[500:n_pasos, ]) + geom_histogram(aes(P, y = ..density..), color = &quot;white&quot;) + theme_minimal(base_size = 16) "]
]
